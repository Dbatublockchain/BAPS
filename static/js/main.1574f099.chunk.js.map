{"version":3,"sources":["components/Navbar/Header.js","components/Items/TransactionItem.js","components/Home/LeftList.js","assets/empty_data_set.png","components/Home/RightInfo.js","containers/Home/Home.js","containers/Member/MemberItem.js","containers/Member/Member.js","containers/Notification/Notification.js","containers/Create/CreateRole.js","containers/Layout.js","App.js","reportWebVitals.js","index.js","ethereum/factory.js","ethereum/web3.js","containers/Create/Create.js","ethereum/ipfs.js"],"names":["Header","auth","useState","show","setShow","myAddress","setMyAddress","myBalance","setBalance","userInfo","setUserInfo","handleClose","useEffect","a","connectMetamask","updateMetamaskAcc","fetchUserInfo","address","factory","methods","userMap","call","console","log","window","ethereum","on","request","method","then","res","accountChangeHandler","alert","account","getbalance","params","_balance","ethers","utils","formatEther","Navbar","style","padding","bg","fixed","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","menuVariant","role","Item","onClick","Dropdown","name","Menu","ItemText","parseFloat","toFixed","approveCount","declineCount","slipCount","Button","Modal","onHide","closeButton","Title","Body","Footer","TransactionItem","item","Card","margin","marginTop","border","Text","docHash","comment","amount","to","LeftList","items","list","reverse","InputGroup","FormControl","placeholder","aria-label","aria-describedby","length","map","index","RightInfo","isEmpty","hash","useParams","setItem","approvals","setApprovals","approving","setApproving","isApproved","setApproved","isDeclined","setDeclined","loading","setLoading","isWaiting","setWaiting","setExpired","loadingText","setLoadingText","loadData","validateTxDuration","web3","eth","getAccounts","accounts","_userInfo","transactionMap","trans","listApprovals","app","approvalList","appAlreadyList","filter","status","currentApprovalRole","approveTransaction","e","preventDefault","send","from","declineTransaction","info","setInfo","handleShow","Container","src","Empty","alt","minHeight","display","alignItems","justifyContent","Form","Group","controlId","Label","Control","type","value","readOnly","Row","Col","open","size","disabled","renderer","days","hours","minutes","seconds","completed","date","user","createdTime","parseInt","timestamp","day","windowTime","as","rows","multiple","color","cursor","Alert","marginLeft","Spinner","animation","Home","transactions","setTransactions","listTransaction","transactionList","md","path","exact","MemberItem","handleShowDelete","data","setData","number","Member","showDelete","setShowDelete","users","setUsers","setName","setRole","setId","createAlert","setCreateAlert","creating","setCreating","deleting","setDeleting","setIndex","roleList","setRoleList","fetchUserList","fetchRoleList","location","replace","listRoles","_roleList","listUsers","userList","filteredList","createUser","deleteUser","paddingTop","textAlign","Table","striped","bordered","hover","backdrop","keyboard","onChange","target","Notification","nots","setNots","listNotification","arr","ns","ListGroup","numbered","message","Badge","pill","CreateRole","minAmount","setMinAmount","maxAmount","setMaxAmount","error","setError","success","setSuccess","roles","setRoles","createRole","myAccount","createdRole","tx","transactionHash","Layout","Create","App","setAuth","authMember","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","instance","Contract","BatuFi","abi","Web3","currentProvider","provider","providers","HttpProvider","file","setFile","setAmount","setComment","setHash","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","getImageBuffer","readAsArrayBuffer","onloadend","buffer","Buffer","createTransaction","salt","imageBuffer","sha256","uid","ipfs","add","err","transaction","files","projectId","toString","IPFS","host","port","protocol","headers","authorization"],"mappings":"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","file":"static/js/main.1574f099.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Button,\r\n  Modal,\r\n  Dropdown,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nimport { ethers } from \"ethers\";\r\nimport factory from \"../../ethereum/factory\";\r\n\r\nconst Header = ({ auth }) => {\r\n  const [show, setShow] = useState(false);\r\n  const [myAddress, setMyAddress] = useState(\"\");\r\n  const [myBalance, setBalance] = useState(\"\");\r\n  const [userInfo, setUserInfo] = useState(null);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(async () => {\r\n    connectMetamask();\r\n    updateMetamaskAcc();\r\n  }, []);\r\n\r\n  const fetchUserInfo = async (address) => {\r\n    try {\r\n      const userInfo = await factory.methods.userMap(address).call();\r\n      setUserInfo(userInfo);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const updateMetamaskAcc = async () => {\r\n    window.ethereum.on(\"accountsChanged\", async function () {\r\n      // Time to reload your interface with accounts[0]!\r\n      connectMetamask();\r\n      // accounts = await web3.eth.getAccounts();\r\n    });\r\n  };\r\n\r\n  const connectMetamask = () => {\r\n    // Asking if metamask is already present or not\r\n    if (window.ethereum) {\r\n      // res[0] for fetching a first wallet\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((res) => accountChangeHandler(res[0]));\r\n    } else {\r\n      alert(\"install metamask extension!!\");\r\n    }\r\n  };\r\n\r\n  const accountChangeHandler = (account) => {\r\n    // Setting an address data\r\n    if (account) {\r\n      fetchUserInfo(account);\r\n      setMyAddress(account);\r\n      // Setting a balance\r\n      getbalance(account);\r\n    } else {\r\n      setMyAddress(\"\");\r\n    }\r\n  };\r\n\r\n  const getbalance = (address) => {\r\n    // Requesting balance method\r\n    window.ethereum\r\n      .request({\r\n        method: \"eth_getBalance\",\r\n        params: [address, \"latest\"],\r\n      })\r\n      .then((_balance) => {\r\n        if (_balance) {\r\n          // Setting balance\r\n          setBalance(ethers.utils.formatEther(_balance));\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        style={{ padding: \"1rem 4rem\" }}\r\n        bg=\"dark\"\r\n        fixed=\"top\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n      >\r\n        <Navbar.Brand href=\"/home\">DBATU FINANCE</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/home\">Home</Nav.Link>\r\n            <Nav.Link href=\"https://etherscan.io/\">Etherscan</Nav.Link>\r\n            {auth && <Nav.Link href=\"/members\">Members</Nav.Link>}\r\n            {auth && userInfo && (\r\n              <NavDropdown\r\n                id=\"nav-dropdown-light-example\"\r\n                title=\"Create\"\r\n                menuVariant=\"dark\"\r\n              >\r\n                {userInfo.role === \"LA\" && (\r\n                  <NavDropdown.Item href=\"/create\">\r\n                    Create Procurement\r\n                  </NavDropdown.Item>\r\n                )}\r\n                {userInfo.role === \"Owner\" && (\r\n                  <NavDropdown.Item href=\"/create-role\">\r\n                    Create Role\r\n                  </NavDropdown.Item>\r\n                )}\r\n              </NavDropdown>\r\n            )}\r\n            <Nav.Link href=\"#\" onClick={handleShow}>\r\n              Wallet\r\n            </Nav.Link>\r\n            <Nav.Link href=\"/notification\">Notification</Nav.Link>\r\n          </Nav>\r\n          {myAddress !== \"\" && userInfo ? (\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\r\n                Connected as : {userInfo.name === \"\" ? \"Viewer\" : userInfo.name}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Header>\r\n                  Name: {userInfo.name === \"\" ? \"Viewer\" : userInfo.name}\r\n                  <Dropdown.ItemText>\r\n                    Balance: {parseFloat(myBalance).toFixed(5)} Eth\r\n                  </Dropdown.ItemText>\r\n                </Dropdown.Header>\r\n                <Dropdown.Item>\r\n                  Role: {userInfo.role === \"\" ? \"Viewer\" : `${userInfo.role}`}\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  Approved Txs: {userInfo.approveCount}\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>\r\n                  Declined Txs: {userInfo.declineCount}\r\n                </Dropdown.Item>\r\n                <Dropdown.Item>Slipped Txs: {userInfo.slipCount}</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          ) : (\r\n            <Button onClick={connectMetamask}>Connect to Metamask</Button>\r\n          )}\r\n          {/* <Button variant=\"outline-success\">Search</Button> */}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Wallet</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Connected with Metamask, Address:\r\n          {myAddress}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Connect\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Badge, Card, Button } from \"react-bootstrap\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst TransactionItem = ({ item }) => {\r\n  return (\r\n    <Card\r\n      style={{ margin: \"8px\", marginTop: \"0\" }}\r\n      className=\"text-left\"\r\n      border=\"warning\"\r\n    >\r\n      <Card.Header>ID: {item.id}</Card.Header>\r\n      <Card.Body>\r\n        <Card.Text>{item.docHash}</Card.Text>\r\n        <Card.Text>Comment: {item.comment}</Card.Text>\r\n        <Card.Text>Amount: Rs {item.amount}</Card.Text>\r\n        <Link to={`/home/${item.docHash}`}>\r\n        <Button variant=\"primary\">View Details</Button>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TransactionItem;\r\n","import React from \"react\";\r\nimport LeftListFun from \"../../functions/LeftListFun\";\r\nimport TransactionItem from \"../Items/TransactionItem\";\r\nimport \"./Home.css\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\n\r\nconst LeftList = ({items}) => {\r\n  // const { items } = LeftListFun();\r\n  let arr = [...items];\r\n  let list = arr.reverse();\r\n  \r\n\r\n  return (\r\n    <div className=\"home-left-list\">\r\n      <div style={{padding: '0 8px'}}>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            placeholder=\"Search transaction by id\"\r\n            aria-label=\"Search transaction by id\"\r\n            aria-describedby=\"basic-addon2\"\r\n          />\r\n          <Button variant=\"outline-secondary\" id=\"button-addon2\">\r\n            Search\r\n          </Button>\r\n        </InputGroup>\r\n      </div>\r\n      <div className=\"home-left-list-container\">\r\n        {list.length !== 0 && list.map((item, index) => (\r\n          <TransactionItem item={item} key={index + item.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftList;\r\n","export default __webpack_public_path__ + \"static/media/empty_data_set.88c7d759.png\";","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Spinner,\r\n  Modal,\r\n} from \"react-bootstrap\";\r\nimport Countdown from \"react-countdown\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport Empty from \"../../assets/empty_data_set.png\";\r\nimport \"./Home.css\";\r\nimport factory from \"../../ethereum/factory\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport { useState } from \"react\";\r\n\r\nconst RightInfo = ({ isEmpty, auth }) => {\r\n  const { hash } = useParams();\r\n\r\n  const [item, setItem] = useState(null);\r\n  const [approvals, setApprovals] = useState([]);\r\n  const [approving, setApproving] = useState(false);\r\n  const [isApproved, setApproved] = useState(false);\r\n  const [isDeclined, setDeclined] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [eligible, setEligible] = useState(true);\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [isWaiting, setWaiting] = useState(false);\r\n  const [isExpired, setExpired] = useState(false);\r\n  const [loadingText, setLoadingText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadData(hash);\r\n    updateMetamaskAcc(hash);\r\n  }, [hash]);\r\n\r\n  const loadData = async (hash) => {\r\n    setUserInfo(null);\r\n    setItem(null);\r\n    setApprovals([]);\r\n    setApproved(false);\r\n    setDeclined(false);\r\n    setWaiting(false);\r\n    setLoading(true);\r\n\r\n    setLoadingText(\"Validating tx...\");\r\n    await factory.methods.validateTxDuration(hash).call();\r\n\r\n    setLoadingText(\"Fetching user info...\");\r\n    const accounts = await web3.eth.getAccounts();\r\n    //fetch user info\r\n    const _userInfo = await factory.methods.userMap(accounts[0]).call();\r\n    setUserInfo(_userInfo);\r\n\r\n    setLoadingText(\"Fetching tx info...\");\r\n    // fetch tx info\r\n    const trans = await factory.methods.transactionMap(hash).call();\r\n    setItem(trans);\r\n\r\n    // fetch tx approvals info\r\n    const app = await factory.methods.listApprovals(hash).call();\r\n    const approvalList = app.approvalList;\r\n    setApprovals(approvalList);\r\n\r\n    setLoadingText(\"Finalizing the tx...\");\r\n    // check if already approved or declined\r\n    const appAlreadyList = approvalList.filter((a) => a.id === _userInfo.id);\r\n    if (trans.status === \"EXPIRED\") {\r\n      setExpired(true);\r\n    } else if (trans.status === \"DECLINED\") {\r\n      if (appAlreadyList.length > 0) {\r\n        setApproved(true);\r\n      } else {\r\n        setDeclined(true);\r\n      }\r\n    } else if (\r\n      trans.status === \"PENDING\" &&\r\n      trans.currentApprovalRole !== _userInfo.role\r\n    ) {\r\n      setWaiting(true);\r\n    } else if (trans.status === \"PENDING\") {\r\n      if (appAlreadyList.length > 0) {\r\n        setApproved(true);\r\n      }\r\n    }\r\n    setLoadingText(\"\");\r\n    setLoading(false);\r\n  };\r\n\r\n  const fetchUserInfo = async (address) => {\r\n    try {\r\n      const _userInfo = await factory.methods.userMap(address).call();\r\n      setUserInfo(_userInfo);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const updateMetamaskAcc = async (hash) => {\r\n    window.ethereum.on(\"accountsChanged\", async function () {\r\n      // Time to reload your interface with accounts[0]!\r\n      loadData(hash);\r\n      // accounts = await web3.eth.getAccounts();\r\n    });\r\n  };\r\n\r\n  const approveTransaction = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setApproving(true);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const approveTrans = await factory.methods\r\n        .approveTransaction(hash)\r\n        .send({ from: accounts[0] });\r\n      setApproving(false);\r\n      setApproved(true);\r\n      setDeclined(false);\r\n      loadData(hash);\r\n    } catch (err) {\r\n      setApproving(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const declineTransaction = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setApproving(true);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const declineTx = await factory.methods\r\n        .declineTransaction(hash)\r\n        .send({ from: accounts[0] });\r\n      setApproving(false);\r\n      setDeclined(true);\r\n      setApproved(false);\r\n      loadData(hash);\r\n    } catch (err) {\r\n      setApproving(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const [show, setShow] = useState(false);\r\n  const [info, setInfo] = useState(null);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = async (item) => {\r\n    setInfo(null);\r\n    setShow(true);\r\n    const userInfo = await factory.methods.userMap(item.id).call();\r\n    setInfo(userInfo);\r\n  };\r\n\r\n  const handleOpenImage = () => {\r\n    window.open(`https://gateway.ipfs.io/ipfs/${hash}`);\r\n  };\r\n\r\n  const windowTime = (item, user) => {\r\n    const createdTime = parseInt(item.timestamp) * 1000;\r\n    const day = 86400000;\r\n    switch (user.role) {\r\n      case \"LA\":\r\n        return 0;\r\n      case \"HOD\":\r\n        return createdTime + day;\r\n      case \"FO\":\r\n        return createdTime + 3 * day;\r\n      case \"REG\":\r\n        return createdTime + 5 * day;\r\n      case \"VC\":\r\n        return createdTime + 7 * day;\r\n      case \"CC\":\r\n        return createdTime + 10 * day;\r\n      default:\r\n        return 0;\r\n    }\r\n  };\r\n\r\n  // Renderer callback with condition\r\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\r\n    if (completed) {\r\n      // Render a completed state\r\n      return <p>Time Window Closed!</p>;\r\n    } else {\r\n      // Render a countdown\r\n      return (\r\n        <div>\r\n          <p>\r\n            <span>\r\n              <strong>{days}:</strong>\r\n              <strong>{hours}:</strong>\r\n              <strong>{minutes}:</strong>\r\n              <strong>{seconds}</strong>\r\n            </span>{\" \"}\r\n            Hours\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"home-right-info\">\r\n      {isEmpty ? (\r\n        <img src={Empty} alt=\"no data\" />\r\n      ) : (\r\n        <div\r\n          style={{\r\n            minHeight: \"85vh\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {loading || !item || !userInfo ? (\r\n            <div>\r\n              <Spinner animation=\"border\" variant=\"primary\" />\r\n              <h5>{loadingText}</h5>\r\n            </div>\r\n          ) : (\r\n            <Form className=\"text-left\">\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                <Form.Label>Transaction Id</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Transaction Id\"\r\n                  value={item ? item.id : \"\"}\r\n                  readOnly\r\n                />\r\n                <Form.Text className=\"text-muted\">\r\n                  Uniquely generated transaction id at the time when transaction\r\n                  has been created, This id will never change\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                <Form.Label>Document Hash</Form.Label>\r\n                <Form.Control\r\n                  readOnly\r\n                  type=\"text\"\r\n                  placeholder=\"Document Hash\"\r\n                  value={hash ? hash : \"\"}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n                <Form.Label>Uploaded Document</Form.Label>\r\n                <Row>\r\n                  {/* <Col>\r\n                    <Form.Control type=\"file\" disabled />\r\n                  </Col> */}\r\n                  <Col>\r\n                    <Button\r\n                      onClick={handleOpenImage}\r\n                      size=\"sm\"\r\n                      disabled={!auth}\r\n                      variant=\"secondary\"\r\n                    >\r\n                      View File\r\n                    </Button>\r\n                  </Col>\r\n                  {item.status === \"APPROVED\" ||\r\n                  item.status === \"DECLINED\" ||\r\n                  item.status === \"EXPIRED\" ? (\r\n                    \"\"\r\n                  ) : (\r\n                    <Col>\r\n                      <Countdown\r\n                        renderer={renderer}\r\n                        date={windowTime(item, userInfo)}\r\n                      />\r\n                    </Col>\r\n                  )}\r\n                  <Col>\r\n                    <div\r\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                    >\r\n                      <Button\r\n                        size=\"sm\"\r\n                        variant={\r\n                          item.status === \"DECLINED\" ? \"danger\" : \"success\"\r\n                        }\r\n                      >\r\n                        Amount: Rs {item ? item.amount : \"Loading...\"}\r\n                      </Button>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                <Form.Label>Add Comment</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Add any comment...\"\r\n                  as=\"textarea\"\r\n                  readOnly\r\n                  value={item ? item.comment : \"\"}\r\n                  rows={3}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                <Form.Label>Approved by</Form.Label>\r\n                <Form.Control className=\"approval-list\" as=\"div\" multiple>\r\n                  {approvals.length > 0 ? (\r\n                    approvals.map((item, index) => (\r\n                      <div\r\n                        className=\"approval-item\"\r\n                        // key={item.id}\r\n                        key={item}\r\n                      >\r\n                        {/* {`${item.firstName} ${item.lastName} [${item.role}]`} */}\r\n                        <p>{item.name}</p>\r\n                        <p\r\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\r\n                          onClick={() => handleShow(item)}\r\n                        >\r\n                          More Info\r\n                        </p>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <option key={\"loading\"}>Loading...</option>\r\n                  )}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              {item.status === \"APPROVED\" && (\r\n                <Alert key=\"1\" variant=\"success\">\r\n                  The transaction has been approved by all the authorities\r\n                </Alert>\r\n              )}\r\n              {item.status === \"DECLINED\" && (\r\n                <Alert key=\"5\" variant=\"danger\">\r\n                  The transaction has been declined by{\" \"}\r\n                  {item.currentApprovalRole}.\r\n                </Alert>\r\n              )}\r\n              {item.status === \"EXPIRED\" && (\r\n                <Alert key=\"7\" variant=\"danger\">\r\n                  The transaction is expired and the approval window is closed.{\" \"}\r\n                  {item.currentApprovalRole}.\r\n                </Alert>\r\n              )}\r\n              {isWaiting && (\r\n                <Alert key=\"6\" variant=\"warning\">\r\n                  Wait for {item.currentApprovalRole} to approve the transaction\r\n                </Alert>\r\n              )}\r\n              {isApproved && (\r\n                <Button disabled variant=\"success\">\r\n                  Approved\r\n                </Button>\r\n              )}\r\n              {isDeclined && (\r\n                <Button disabled variant=\"danger\">\r\n                  Declined\r\n                </Button>\r\n              )}\r\n              {item.status === \"PENDING\" && !isWaiting && (\r\n                <div>\r\n                  {!isApproved && !isDeclined && (\r\n                    <>\r\n                      {auth &&\r\n                        userInfo &&\r\n                        userInfo.role !== \"LA\" &&\r\n                        userInfo.role !== \"Owner\" && (\r\n                          <div>\r\n                            <Button\r\n                              disabled={approving}\r\n                              onClick={!approving ? approveTransaction : null}\r\n                              variant=\"primary\"\r\n                              type=\"submit\"\r\n                            >\r\n                              {!approving\r\n                                ? \"Approve Transaction\"\r\n                                : \"Loading...\"}\r\n                            </Button>\r\n                            <Button\r\n                              style={{ marginLeft: \"1rem\" }}\r\n                              disabled={approving}\r\n                              onClick={!approving ? declineTransaction : null}\r\n                              variant=\"danger\"\r\n                              type=\"submit\"\r\n                            >\r\n                              {!approving ? \"Decline\" : \"Loading...\"}\r\n                            </Button>\r\n                          </div>\r\n                        )}\r\n                    </>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </Form>\r\n          )}\r\n        </div>\r\n      )}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Approval Info</Modal.Title>\r\n        </Modal.Header>\r\n        {info ? (\r\n          <Modal.Body>\r\n            <p className=\"modal-para\">\r\n              <span>Address:</span> {info.id}\r\n            </p>\r\n            <p className=\"modal-para\">\r\n              <span>Name:</span> {info.name}\r\n            </p>\r\n            <p className=\"modal-para\">\r\n              <span>Role:</span> {info.role}\r\n            </p>\r\n            <p className=\"modal-para\">\r\n              <span>Approved Txs:</span> {info.approveCount}\r\n            </p>\r\n            <p className=\"modal-para\">\r\n              <span>Declined Txs:</span> Rs {info.declineCount}\r\n            </p>\r\n            <p className=\"modal-para\">\r\n              <span>Slipped Txs:</span> Rs {info.slipCount}\r\n            </p>\r\n          </Modal.Body>\r\n        ) : (\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              minHeight: \"100px\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Spinner animation=\"border\" variant=\"primary\" />\r\n          </div>\r\n        )}\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RightInfo;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport LeftList from \"../../components/Home/LeftList\";\r\nimport RightInfo from \"../../components/Home/RightInfo\";\r\nimport { Route } from \"react-router-dom\";\r\nimport factory from \"../../ethereum/factory\";\r\n\r\nconst Home = ({auth}) => {\r\n\r\n  const [transactions, setTransactions] = useState([]);\r\n  //new\r\n  useEffect(async () => {\r\n    const transactionList = await factory.methods\r\n    .listTransaction().call();\r\n    setTransactions(transactionList)\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ padding: \"0 1rem\" }}>\r\n      <Row>\r\n        <Col md={4}>\r\n          <LeftList items={transactions} />\r\n        </Col>\r\n        <Col md={8}>\r\n          <Route path=\"/home/:hash\">\r\n            <RightInfo isEmpty={false} auth={auth} />\r\n          </Route>\r\n          <Route path=\"/home/:\" exact>\r\n            <RightInfo isEmpty={true} auth={auth} />\r\n          </Route>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport factory from \"../../ethereum/factory\";\r\n\r\nconst MemberItem = ({ item, handleShowDelete }) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(async () => {\r\n    const userInfo = await factory.methods.userMap(item).call();\r\n    setData(userInfo);\r\n  }, [item]);\r\n\r\n  return (\r\n    <tr>\r\n      <td>{data && data.number}</td>\r\n      <td>{data && data.name}</td>\r\n      <td>{data && data.role}</td>\r\n      <td>\r\n        {data && data.approveCount} / {data && data.declineCount} /{\" \"}\r\n        {data && data.slipCount}\r\n      </td>\r\n      <td>{data && data.id}</td>\r\n      <td>\r\n        {data && data.id !== \"0x0000000000000000000000000000000000000000\" && (\r\n          <Button\r\n            onClick={() => handleShowDelete(data && data.number)}\r\n            variant=\"outline-danger\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default MemberItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Table,\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport factory from \"../../ethereum/factory\";\r\nimport MemberItem from \"./MemberItem\";\r\nimport \"./Member.css\"\r\n\r\nconst Member = ({auth}) => {\r\n  const [show, setShow] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [users, setUsers] = useState([]);\r\n  const [name, setName] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [maxAmount, setMaxAmount] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [createAlert, setCreateAlert] = useState(false);\r\n  const [creating, setCreating] = useState(false);\r\n  const [deleting, setDeleting] = useState(false);\r\n  const [index, setIndex] = useState(null);\r\n  const [roleList, setRoleList] = useState([]);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setShowDelete(false);\r\n    setCreateAlert(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleShowDelete = (number) => {\r\n    setShowDelete(true);\r\n    setIndex(number);\r\n  };\r\n\r\n  useEffect(async () => {\r\n    fetchUserList();\r\n    fetchRoleList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(auth == false) {\r\n        window.location.replace(\"/home\")\r\n    }\r\n  }, [auth])\r\n\r\n  const fetchRoleList = async () => {\r\n    try {\r\n      const _roleList = await factory.methods.listRoles().call();\r\n      //   const filteredList = userList.filter(item => item.id !== \"0x0000000000000000000000000000000000000000\");\r\n      setRoleList(_roleList);\r\n      setRole(_roleList[0].role);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const fetchUserList = async () => {\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      console.log(accounts[0]);\r\n      const userList = await factory.methods.listUsers().call();\r\n      const filteredList = userList.filter(\r\n        (item) => item !== \"0x0000000000000000000000000000000000000000\"\r\n      );\r\n      setUsers(filteredList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const createUser = async () => {\r\n    if (name === \"\" || role === \"\" || id === \"\") {\r\n      return setCreateAlert(true);\r\n    }\r\n    try {\r\n      setCreateAlert(false);\r\n      setCreating(true);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const user = await factory.methods\r\n        .createUser(role, id, name)\r\n        .send({ from: accounts[0] });\r\n      setCreating(false);\r\n      setShow(false);\r\n      fetchUserList();\r\n    } catch (err) {\r\n      console.log(err);\r\n      setCreating(false);\r\n    }\r\n  };\r\n\r\n  const deleteUser = async () => {\r\n    try {\r\n      if (!index) {\r\n        return console.log(\"index cannot be null\");\r\n      }\r\n      setDeleting(true);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const deletedUser = await factory.methods.deleteUser(index).send({\r\n        from: accounts[0],\r\n      });\r\n      setDeleting(false);\r\n      setShowDelete(false);\r\n      fetchUserList();\r\n    } catch (err) {\r\n      setDeleting(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\r\n        <Row>\r\n          <Col>\r\n            <h2>All Members</h2>\r\n          </Col>\r\n          <Col style={{ textAlign: \"right\" }}>\r\n            <Button onClick={handleShow}>Add Member</Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Table striped bordered hover>\r\n              <thead>\r\n                <tr>\r\n                  <th>#</th>\r\n                  <th>Name</th>\r\n                  <th>Role</th>\r\n                  <th>Approved/Declined/Slipped</th>\r\n                  <th>Address</th>\r\n                  <th>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {users.length !== 0 &&\r\n                  users.map((item, index) => (\r\n                    <MemberItem\r\n                      key={item.id + index}\r\n                      item={item}\r\n                      handleShowDelete={handleShowDelete}\r\n                    />\r\n                  ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {createAlert && (\r\n            <Alert key=\"1\" variant=\"danger\">\r\n              No input should be empty!\r\n            </Alert>\r\n          )}\r\n          <Form className=\"text-left\">\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Member Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"e.g. Sanil Gandhi\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Member roles</Form.Label>\r\n              <div>\r\n                <select className=\"member-create-select\" onChange={(e) => setRole(e.target.value)}>\r\n                  {roleList.map((role) => (\r\n                    <option value={role.role}>\r\n                      {role.name} ({role.role})\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Public Key</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"e.g. 0x3Ec8719804c7D39B71446E0edFe88893b128b24E\"\r\n                value={id}\r\n                onChange={(e) => setId(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={creating || name === \"\" || id === \"\"}\r\n            onClick={!creating ? createUser : null}\r\n            variant=\"primary\"\r\n          >\r\n            {creating ? \"Loading...\" : \"Create\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showDelete} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Delete Member</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Are you sure, You want to delete this member?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button\r\n            disabled={deleting}\r\n            variant=\"danger\"\r\n            onClick={!deleting ? deleteUser : null}\r\n          >\r\n            {!deleting ? \"Delete\" : \"Loading...\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Member;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nots.css\";\r\nimport { ListGroup, Badge } from \"react-bootstrap\";\r\nimport factory from \"../../ethereum/factory\";\r\n\r\nconst Notification = () => {\r\n  const [nots, setNots] = useState([]);\r\n  //new\r\n  useEffect(async () => {\r\n    let list = await factory.methods.listNotification().call();\r\n    let arr = [...list];\r\n    let ns = arr.reverse();\r\n    setNots(ns);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"nots\">\r\n      {nots.length > 0 &&\r\n        nots.map((item, index) => {\r\n          let variant;\r\n          if (item.status === \"create\") {\r\n            variant = \"warning\";\r\n          } else if (item.status === \"pending\") {\r\n            variant = \"success\";\r\n          } else {\r\n            variant = \"primary\";\r\n          }\r\n\r\n          return (\r\n            <ListGroup as=\"ol\" numbered>\r\n              <ListGroup.Item\r\n                as=\"li\"\r\n                variant={variant}\r\n                className=\"d-flex mb-2 justify-content-between align-items-start\"\r\n              >\r\n                <div className=\"ms-2 me-auto d-flex flex-column align-items-start\">\r\n                  <h5 className=\"fw-bold\">{item.title}</h5>\r\n                  <p>{item.message}</p>\r\n                </div>\r\n                <Badge variant=\"primary\" pill>\r\n                  {index + 1}\r\n                </Badge>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Alert,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport factory from \"../../ethereum/factory\";\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\nconst CreateRole = ({auth}) => {\r\n  const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [minAmount, setMinAmount] = useState(\"\");\r\n  const [maxAmount, setMaxAmount] = useState(\"\");\r\n  const [creating, setCreating] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchRoleList()\r\n    if(auth == false) {\r\n        window.location.replace(\"/home\")\r\n    }\r\n  }, [auth])\r\n\r\n  \r\n  const fetchRoleList = async () => {\r\n    try {\r\n      const roleList = await factory.methods.listRoles().call();\r\n    //   const filteredList = userList.filter(item => item.id !== \"0x0000000000000000000000000000000000000000\");\r\n      setRoles(roleList);\r\n      console.log(roleList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const createRole = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setCreating(true);\r\n      const accounts = await web3.eth.getAccounts();\r\n      const myAccount = accounts[0];\r\n\r\n      const createdRole = await factory.methods\r\n        .createRole(id, name, maxAmount, minAmount)\r\n        .send({\r\n          from: myAccount,\r\n        });\r\n      const tx = createdRole.transactionHash;\r\n      setCreating(false);\r\n      setSuccess(\"Successfully created Role \" + id + \" with tx hash  \" + tx);\r\n      fetchRoleList()\r\n    } catch (err) {\r\n      setError(\"Error in creating role!\");\r\n      setSuccess(\"\");\r\n      setCreating(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRole = () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\r\n      <h2>Create Role</h2>\r\n      <Row>\r\n        <Col>\r\n          {(success !== \"\" || error !== \"\") && (\r\n            <Alert key=\"1\" variant={success !== \"\" ? \"success\" : \"danger\"}>\r\n              {success !== \"\" ? success : error}\r\n            </Alert>\r\n          )}\r\n          <Form className=\"text-left\">\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Role Id</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Role Id\"\r\n                value={id}\r\n                onChange={(e) => setId(e.target.value)}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Unique id for the role LA, HOD, FO, REG, VC, CC\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Role Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Role Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Maximum Amount</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Maximum Amount\"\r\n                value={maxAmount}\r\n                onChange={(e) => setMaxAmount(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Minimum Amount</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Minimum Amount\"\r\n                value={minAmount}\r\n                onChange={(e) => setMinAmount(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={\r\n                creating ||\r\n                id === \"\" ||\r\n                name === \"\" ||\r\n                maxAmount === \"\" ||\r\n                minAmount === \"\"\r\n              }\r\n              onClick={!creating ? createRole : null}\r\n            >\r\n              {!creating ? \"Create\" : \"Loading...\"}\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: \"1rem\" }}\r\n              variant=\"outline-danger\"\r\n              type=\"submit\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n        <Col>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Role Id</th>\r\n                <th>Role Name</th>\r\n                <th>Max Amount</th>\r\n                <th>Min Amount</th>\r\n                {/* <th>Action</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {roles.length !== 0 &&\r\n                roles.map((item, index) => (\r\n                  <tr key={item.role + index}>\r\n                    <td>{item.number}</td>\r\n                    <td>{item.role}</td>\r\n                    <td>{item.name}</td>\r\n                    <td>{item.maxAmount}</td>\r\n                    <td>Rs {item.minAmount}</td>\r\n                    {/* <td>\r\n                      <Button\r\n                        onClick={() => handleDeleteRole(item.role)}\r\n                        variant=\"outline-danger\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </td> */}\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateRole;\r\n","import React from \"react\";\r\nimport Home from \"./Home/Home\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Create from \"./Create/Create\";\r\nimport Member from './Member/Member'\r\nimport Notification from \"./Notification/Notification\";\r\nimport CreateRole from \"./Create/CreateRole\";\r\n\r\nconst Layout = ({auth}) => {\r\n  return (\r\n    <div style={{ paddingTop: \"4.5rem\" }}>\r\n      <Route path=\"/home\" >\r\n        <Home auth={auth} />\r\n      </Route>\r\n      <Route path=\"/create\">\r\n        <Create auth={auth} />\r\n      </Route>\r\n      <Route path=\"/create-role\">\r\n        <CreateRole auth={auth} />\r\n      </Route>\r\n      <Route path=\"/members\">\r\n        <Member auth={auth} />\r\n      </Route>\r\n      <Route path=\"/notification\">\r\n        <Notification auth={auth} />\r\n      </Route>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import \"./App.css\";\nimport Header from \"./components/Navbar/Header\";\nimport Layout from \"./containers/Layout\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport web3 from \"./ethereum/web3\";\nimport factory from \"./ethereum/factory\";\nimport { useState } from \"react\";\nimport UnAuth from \"./containers/UnAuth/UnAuth\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const [auth, setAuth] = useState(null);\n\n  useEffect(() => {\n    let accounts;\n\n    async function loadData() {\n      try {\n        accounts = await web3.eth.getAccounts();\n        const isMember = await factory.methods\n          .authMember()\n          .call({ from: accounts[0] });\n        setAuth(true);\n      } catch (err) {\n        setAuth(false);\n        console.log(err);\n      }\n    }\n\n    async function updateMetamaskAcc() {\n      loadData();\n      window.ethereum.on(\"accountsChanged\", async function () {\n        // Time to reload your interface with accounts[0]!\n        loadData();\n        // accounts = await web3.eth.getAccounts();\n      });\n    }\n    updateMetamaskAcc();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Header auth={auth} />\n        <Router>\n          <Route path=\"/\">\n            <Layout auth={auth} />\n          </Route>\n        </Router>\n      </div>\n      {/* {auth ? (\n        <div>\n          <Header />\n          <Router>\n            <Route path=\"/\">\n              <Layout />\n            </Route>\n          </Router>\n        </div>\n      ) : (\n        <div\n          style={{\n            height: \"100vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {auth == null ? (\n            <Spinner animation=\"border\" variant=\"primary\" />\n          ) : (\n            <UnAuth />\n          )}\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import web3 from './web3';\r\nimport BatuFi from './build/BatuFi.json';\r\n\r\nconst instance = new web3.eth.Contract(\r\n    BatuFi.abi,\r\n    '0x64d2B39c463307f5913E2BB02D9172f00A8185B5'\r\n);\r\n\r\nexport default instance;","import Web3 from 'web3';\r\n\r\nlet web3;\r\n\r\nif(typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n    // In the browser and metamask is running\r\n    web3 = new Web3(window.web3.currentProvider);\r\n}else {\r\n    // In the server or user is not running metamask\r\n    const provider = new Web3.providers.HttpProvider(\r\n        'https://rinkeby.infura.io/v3/7505ac96813441d18ceb0e3b5afea3a5'\r\n    )\r\n    web3 = new Web3(provider)\r\n}\r\n\r\nexport default web3;","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport sha256 from \"sha256\";\r\nimport factory from \"../../ethereum/factory\";\r\nimport web3 from \"../../ethereum/web3\";\r\nimport { uid } from \"uid\";\r\nimport ipfs from \"../../ethereum/ipfs\";\r\n\r\n\r\nconst Create = ({auth}) => {\r\n  const [file, setFile] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n  const [hash, setHash] = useState(\"\");\r\n  const [id, setId] = useState(\"\");\r\n  const [creating, setCreating] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if(auth == false) {\r\n        window.location.replace(\"/home\")\r\n    }\r\n  }, [auth])\r\n\r\n  function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n  function getImageBuffer(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsArrayBuffer(file);\r\n      reader.onloadend = () => resolve({ buffer: Buffer(reader.result) });\r\n      reader.onerror = (error) => reject(error);\r\n    });\r\n  }\r\n\r\n  const createTransaction = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setCreating(true);\r\n      let salt = \"\";\r\n      let id = \"\";\r\n      const accounts = await web3.eth.getAccounts();\r\n      const imageBuffer = await getImageBuffer(file);\r\n      const data = await getBase64(file);\r\n      salt = sha256(data);\r\n      setHash(salt);\r\n      id = uid(24);\r\n      setId(id);\r\n\r\n      ipfs.add(imageBuffer.buffer, async (err, result) => {\r\n        if (err) {\r\n          console.log(err);\r\n          setError(\"Error, \", err.message);\r\n          return;\r\n        }\r\n        const docHash = result[0].hash;\r\n        const transaction = await factory.methods\r\n          .createTransaction(id, docHash, \"default\", comment, amount)\r\n          .send({\r\n            from: accounts[0],\r\n          });\r\n        const tx = transaction.transactionHash;\r\n        setCreating(false);\r\n        setFile(\"\")\r\n        setAmount(\"\")\r\n        setComment(\"\")\r\n        setSuccess(\r\n          \"Successfully created transaction by \" +\r\n            accounts[0] +\r\n            \" with transaction hash \" +\r\n            tx\r\n        );\r\n        setError(\"\");\r\n      });\r\n    } catch (err) {\r\n      setError(\"Error in creating transaction!\");\r\n      setSuccess(\"\");\r\n      setCreating(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\r\n      <h2>Create Transaction</h2>\r\n      <Row>\r\n        <Col>\r\n          {(success !== \"\" || error !== \"\") && (\r\n            <Alert key=\"1\" variant={success !== \"\" ? \"success\" : \"danger\"}>\r\n              {success !== \"\" ? success : error}\r\n            </Alert>\r\n          )}\r\n          <Form className=\"text-left\">\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n              <Form.Label>Transaction Id</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Transaction Id\"\r\n                value={id}\r\n                readOnly\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                Uniquely generated transaction id at the time when transaction\r\n                has been created, This id will never change\r\n              </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Document Hash</Form.Label>\r\n              <Form.Control\r\n                readOnly\r\n                type=\"text\"\r\n                placeholder=\"Transaction Hash\"\r\n                value={hash}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n              <Form.Label>Amount</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"e.g 15000\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\r\n              <Form.Label>Uploaded Document</Form.Label>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Control\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                    type=\"file\"\r\n                  />\r\n                </Col>\r\n                <Col>\r\n                  <Button size=\"sm\" variant=\"secondary\">\r\n                    View File\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Add Comment</Form.Label>\r\n              <Form.Control\r\n                placeholder=\"Add any comment...\"\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Button\r\n              variant=\"primary\"\r\n              type=\"submit\"\r\n              disabled={creating || amount === \"\" || file === \"\"}\r\n              onClick={!creating ? createTransaction : null}\r\n            >\r\n              {!creating ? \"Create\" : \"Loading...\"}\r\n            </Button>\r\n            <Button\r\n              style={{ marginLeft: \"1rem\" }}\r\n              variant=\"outline-danger\"\r\n              type=\"submit\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","// import ipfsClient from \"ipfs-http-client\";\r\nimport IPFS from \"ipfs-api\";\r\n\r\nconst projectId = \"2EFfbDVterU2Sbbp9Auds6mxpGk\";\r\nconst projectSecret = \"c9a3cec809e6b681d58578c485c90360\";\r\nconst auth =\r\n  \"Basic \" + Buffer.from(projectId + \":\" + projectSecret).toString(\"base64\");\r\n\r\n// const ipfs = ipfsClient.create({\r\n//     host: 'ipfs.infura.io',\r\n//     port: 5001,\r\n//     protocol: 'https',\r\n//     headers: {\r\n//         authorization: auth\r\n//     }\r\n// })\r\n\r\nconst ipfs = new IPFS({\r\n  host: \"ipfs.infura.io\",\r\n  port: 5001,\r\n  protocol: \"https\",\r\n  headers: {\r\n    authorization: auth,\r\n  },\r\n});\r\n\r\nexport default ipfs;\r\n\r\n// export default ipfs;\r\n"],"sourceRoot":""}