{"version":3,"sources":["components/Navbar/Header.js","components/Items/TransactionItem.js","components/Home/LeftList.js","assets/empty_data_set.png","components/Home/RightInfo.js","containers/Home/Home.js","containers/Member/MemberItem.js","containers/Member/Member.js","containers/Notification/Notification.js","containers/Create/CreateRole.js","containers/Layout.js","App.js","reportWebVitals.js","index.js","ethereum/factory.js","containers/Create/Create.js","ethereum/ipfs.js","ethereum/web3.js"],"names":["Header","_ref","auth","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","myAddress","setMyAddress","_useState5","_useState6","myBalance","setBalance","_useState7","_useState8","userInfo","setUserInfo","handleClose","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","connectMetamask","updateMetamaskAcc","stop","fetchUserInfo","_ref3","_callee2","address","_userInfo","_context2","factory","methods","userMap","call","sent","t0","console","log","_x","apply","arguments","_ref4","_callee4","_context4","window","ethereum","on","_callee3","_context3","request","method","then","res","accountChangeHandler","alert","account","getbalance","params","_balance","ethers","utils","formatEther","_jsxs","children","Navbar","style","padding","bg","fixed","variant","expand","_jsx","Brand","href","Toggle","Collapse","id","Nav","className","NavLink","marginTop","marginRight","color","to","Link","NavDropdown","title","menuVariant","role","onClick","display","Dropdown","name","Menu","ItemText","parseFloat","toFixed","Item","concat","approveCount","declineCount","slipCount","Button","Modal","onHide","closeButton","Title","Body","Footer","TransactionItem","item","Card","margin","border","Text","docHash","comment","amount","LeftList","items","list","_toConsumableArray","reverse","InputGroup","FormControl","placeholder","length","map","index","RightInfo","isEmpty","hash","useParams","setItem","approvals","setApprovals","approving","setApproving","isApproved","setApproved","_useState9","_useState10","isDeclined","setDeclined","_useState11","_useState12","loading","setLoading","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","isWaiting","setWaiting","_useState19","_useState20","setExpired","_useState21","_useState22","loadingText","setLoadingText","loadData","_ref2","accounts","trans","app","approvalList","appAlreadyList","validateTxDuration","web3","eth","getAccounts","transactionMap","listApprovals","filter","a","status","currentApprovalRole","_x3","approveTransaction","_ref6","_callee5","e","_context5","preventDefault","send","from","_x4","declineTransaction","_ref7","_callee6","_context6","_x5","_useState23","_useState24","_useState25","_useState26","info","setInfo","handleShow","_ref8","_callee7","_context7","_x6","Container","src","Empty","alt","minHeight","alignItems","justifyContent","Form","Group","controlId","Label","Control","type","value","readOnly","Row","Col","open","size","disabled","Countdown","renderer","_ref9","days","hours","minutes","seconds","completed","date","user","createdTime","parseInt","timestamp","day","windowTime","as","rows","multiple","cursor","Alert","_Fragment","marginLeft","Spinner","animation","Home","transactions","setTransactions","transactionList","listTransaction","md","Route","path","exact","MemberItem","handleShowDelete","data","setData","number","Member","showDelete","setShowDelete","users","setUsers","setName","setRole","setId","createAlert","setCreateAlert","creating","setCreating","deleting","setDeleting","setIndex","roleList","setRoleList","fetchUserList","fetchRoleList","location","replace","_roleList","listRoles","userList","filteredList","listUsers","createUser","_ref5","abrupt","deleteUser","paddingTop","textAlign","Table","striped","bordered","hover","backdrop","keyboard","onChange","target","Notification","nots","setNots","arr","ns","listNotification","ListGroup","numbered","message","Badge","pill","CreateRole","minAmount","setMinAmount","maxAmount","setMaxAmount","error","setError","success","setSuccess","roles","setRoles","createRole","myAccount","createdRole","tx","transactionHash","Layout","Create","App","setAuth","_loadData","authMember","_updateMetamaskAcc","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","instance","Contract","BatuFi","abi","LogisticRegression","require","Matrix","file","setFile","setAmount","setComment","setHash","setEstimate","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","getImageBuffer","readAsArrayBuffer","onloadend","buffer","Buffer","createTransaction","salt","_id","imageBuffer","sha256","uid","ipfs","add","err","transaction","calculateEstimate","_x2","dateList","lastIndex","matrixAmount","matrixDates","X","Y","logreg","finalResults","push","columnVector","numSteps","learningRate","train","predict","files","projectId","toString","IPFS","host","port","protocol","headers","authorization","Web3","currentProvider","provider","providers","HttpProvider"],"mappings":"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","file":"static/js/main.580d79fe.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Button,\n  Modal,\n  Dropdown,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport factory from \"../../ethereum/factory\";\n\nconst Header = ({ auth }) => {\n  const [show, setShow] = useState(false);\n  const [myAddress, setMyAddress] = useState(\"\");\n  const [myBalance, setBalance] = useState(\"\");\n  const [userInfo, setUserInfo] = useState(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(async () => {\n    connectMetamask();\n    updateMetamaskAcc();\n  }, []);\n\n  const fetchUserInfo = async (address) => {\n    try {\n      const userInfo = await factory.methods.userMap(address).call();\n      setUserInfo(userInfo);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateMetamaskAcc = async () => {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      // Time to reload your interface with accounts[0]!\n      connectMetamask();\n      // accounts = await web3.eth.getAccounts();\n    });\n  };\n\n  const connectMetamask = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((res) => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n\n  const accountChangeHandler = (account) => {\n    // Setting an address data\n    if (account) {\n      fetchUserInfo(account);\n      setMyAddress(account);\n      // Setting a balance\n      getbalance(account);\n    } else {\n      setMyAddress(\"\");\n    }\n  };\n\n  const getbalance = (address) => {\n    // Requesting balance method\n    window.ethereum\n      .request({\n        method: \"eth_getBalance\",\n        params: [address, \"latest\"],\n      })\n      .then((_balance) => {\n        if (_balance) {\n          // Setting balance\n          setBalance(ethers.utils.formatEther(_balance));\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Navbar\n        style={{ padding: \"1rem 4rem\" }}\n        bg=\"dark\"\n        fixed=\"top\"\n        variant=\"dark\"\n        expand=\"lg\"\n      >\n        <Navbar.Brand href=\"/BAPS\">DBATU FINANCE</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavLink\n              style={{ marginTop: \"8px\", marginRight: \"8px\", color: \"#ccc\" }}\n              to=\"/BAPS/home\"\n            >\n              Home\n            </NavLink>\n            <Nav.Link\n              style={{ marginRight: \"8px\" }}\n              href=\"https://etherscan.io/\"\n            >\n              Etherscan\n            </Nav.Link>\n            {auth && (\n              <NavLink\n                style={{ marginTop: \"8px\", marginRight: \"8px\", color: \"#ccc\" }}\n                to=\"/BAPS/members\"\n              >\n                Members\n              </NavLink>\n            )}\n            {auth && userInfo && (\n              <NavDropdown\n                id=\"nav-dropdown-light-example\"\n                title=\"Create\"\n                menuVariant=\"dark\"\n              >\n                {userInfo.role === \"LA\" && (\n                  <NavLink\n                    style={{\n                      marginTop: \"8px\",\n                      marginRight: \"8px\",\n                      color: \"#000\",\n                    }}\n                    to=\"/BAPS/create\"\n                  >\n                    Create Procurement\n                  </NavLink>\n                )}\n                {userInfo.role === \"Owner\" && (\n                  <NavLink\n                    style={{\n                      marginTop: \"8px\",\n                      marginRight: \"8px\",\n                      color: \"#000\",\n                    }}\n                    to=\"/BAPS/create-role\"\n                  >\n                    Create Role\n                  </NavLink>\n                )}\n              </NavDropdown>\n            )}\n            <NavLink\n              style={{ marginTop: \"8px\", marginRight: \"8px\", color: \"#ccc\" }}\n              to=\"#\"\n              onClick={handleShow}\n            >\n              Wallet\n            </NavLink>\n            <NavDropdown\n              id=\"nav-dropdown-light-example\"\n              title=\"Get Recommendation\"\n              menuVariant=\"dark\"\n            >\n              <NavLink\n                style={{\n                  marginTop: \"8px\",\n                  marginRight: \"8px\",\n                  color: \"#000\",\n                  display: \"block\",\n                }}\n                to=\"/BAPS/travel-grant\"\n              >\n                Travel Grant\n              </NavLink>\n\n              <NavLink\n                style={{\n                  marginTop: \"8px\",\n                  marginRight: \"8px\",\n                  color: \"#000\",\n                  display: \"block\",\n                }}\n                to=\"/BAPS/create-role\"\n              >\n                Procurement of equipment\n              </NavLink>\n\n              <NavLink\n                style={{\n                  marginTop: \"8px\",\n                  marginRight: \"8px\",\n                  color: \"#000\",\n                  display: \"block\",\n                }}\n                to=\"/BAPS/create-role\"\n              >\n                Leave Application\n              </NavLink>\n\n              <NavLink\n                style={{\n                  marginTop: \"8px\",\n                  marginRight: \"8px\",\n                  color: \"#000\",\n                  display: \"block\",\n                }}\n                to=\"/BAPS/create-role\"\n              >\n                Medical Bill\n              </NavLink>\n            </NavDropdown>\n            <NavLink\n              style={{ marginTop: \"8px\", marginRight: \"8px\", color: \"#ccc\" }}\n              to=\"/BAPS/notification\"\n            >\n              Notification\n            </NavLink>\n          </Nav>\n          {myAddress !== \"\" && userInfo ? (\n            <Dropdown>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Connected as : {userInfo.name === \"\" ? \"Viewer\" : userInfo.name}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Header>\n                  Name: {userInfo.name === \"\" ? \"Viewer\" : userInfo.name}\n                  <Dropdown.ItemText>\n                    Balance: {parseFloat(myBalance).toFixed(5)} Eth\n                  </Dropdown.ItemText>\n                </Dropdown.Header>\n                <Dropdown.Item>\n                  Role: {userInfo.role === \"\" ? \"Viewer\" : `${userInfo.role}`}\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  Approved Txs: {userInfo.approveCount}\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  Declined Txs: {userInfo.declineCount}\n                </Dropdown.Item>\n                <Dropdown.Item>Slipped Txs: {userInfo.slipCount}</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          ) : (\n            <Button onClick={connectMetamask}>Connect to Metamask</Button>\n          )}\n          {/* <Button variant=\"outline-success\">Search</Button> */}\n        </Navbar.Collapse>\n      </Navbar>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Wallet</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Connected with Metamask, Address:\n          {myAddress}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Connect\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Badge, Card, Button } from \"react-bootstrap\";\nimport {Link} from 'react-router-dom'\n\nconst TransactionItem = ({ item }) => {\n  return (\n    <Card\n      style={{ margin: \"8px\", marginTop: \"0\" }}\n      className=\"text-left\"\n      border=\"warning\"\n    >\n      <Card.Header>ID: {item.id}</Card.Header>\n      <Card.Body>\n        <Card.Text>{item.docHash}</Card.Text>\n        <Card.Text>Comment: {item.comment}</Card.Text>\n        <Card.Text>Amount: Rs {item.amount}</Card.Text>\n        <Link to={`/BAPS/home/${item.docHash}`}>\n        <Button variant=\"primary\">View Details</Button>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TransactionItem;\n","import React from \"react\";\nimport LeftListFun from \"../../functions/LeftListFun\";\nimport TransactionItem from \"../Items/TransactionItem\";\nimport \"./Home.css\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\n\nconst LeftList = ({items}) => {\n  // const { items } = LeftListFun();\n  let arr = [...items];\n  let list = arr.reverse();\n  \n\n  return (\n    <div className=\"home-left-list\">\n      <div style={{padding: '0 8px'}}>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"Search transaction by id\"\n            aria-label=\"Search transaction by id\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <Button variant=\"outline-secondary\" id=\"button-addon2\">\n            Search\n          </Button>\n        </InputGroup>\n      </div>\n      <div className=\"home-left-list-container\">\n        {list.length !== 0 && list.map((item, index) => (\n          <TransactionItem item={item} key={index + item.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeftList;\n","export default __webpack_public_path__ + \"static/media/empty_data_set.88c7d759.png\";","import React from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Modal,\n} from \"react-bootstrap\";\nimport Countdown from \"react-countdown\";\n\nimport { useParams } from \"react-router-dom\";\nimport Empty from \"../../assets/empty_data_set.png\";\nimport \"./Home.css\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { useState } from \"react\";\n\nconst RightInfo = ({ isEmpty, auth }) => {\n  const { hash } = useParams();\n\n  const [item, setItem] = useState(null);\n  const [approvals, setApprovals] = useState([]);\n  const [approving, setApproving] = useState(false);\n  const [isApproved, setApproved] = useState(false);\n  const [isDeclined, setDeclined] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [eligible, setEligible] = useState(true);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isWaiting, setWaiting] = useState(false);\n  const [isExpired, setExpired] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"\");\n\n  useEffect(() => {\n    loadData(hash);\n    updateMetamaskAcc(hash);\n  }, [hash]);\n\n  const loadData = async (hash) => {\n    setUserInfo(null);\n    setItem(null);\n    setApprovals([]);\n    setApproved(false);\n    setDeclined(false);\n    setWaiting(false);\n    setLoading(true);\n\n    setLoadingText(\"Validating tx...\");\n    await factory.methods.validateTxDuration(hash).call();\n\n    setLoadingText(\"Fetching user info...\");\n    const accounts = await web3.eth.getAccounts();\n    //fetch user info\n    const _userInfo = await factory.methods.userMap(accounts[0]).call();\n    setUserInfo(_userInfo);\n\n    setLoadingText(\"Fetching tx info...\");\n    // fetch tx info\n    const trans = await factory.methods.transactionMap(hash).call();\n    setItem(trans);\n\n    // fetch tx approvals info\n    const app = await factory.methods.listApprovals(hash).call();\n    const approvalList = app.approvalList;\n    setApprovals(approvalList);\n\n    setLoadingText(\"Finalizing the tx...\");\n    // check if already approved or declined\n    const appAlreadyList = approvalList.filter((a) => a.id === _userInfo.id);\n    if (trans.status === \"EXPIRED\") {\n      setExpired(true);\n    } else if (trans.status === \"DECLINED\") {\n      if (appAlreadyList.length > 0) {\n        setApproved(true);\n      } else {\n        setDeclined(true);\n      }\n    } else if (\n      trans.status === \"PENDING\" &&\n      trans.currentApprovalRole !== _userInfo.role\n    ) {\n      setWaiting(true);\n    } else if (trans.status === \"PENDING\") {\n      if (appAlreadyList.length > 0) {\n        setApproved(true);\n      }\n    }\n    setLoadingText(\"\");\n    setLoading(false);\n  };\n\n  const fetchUserInfo = async (address) => {\n    try {\n      const _userInfo = await factory.methods.userMap(address).call();\n      setUserInfo(_userInfo);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateMetamaskAcc = async (hash) => {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      // Time to reload your interface with accounts[0]!\n      loadData(hash);\n      // accounts = await web3.eth.getAccounts();\n    });\n  };\n\n  const approveTransaction = async (e) => {\n    e.preventDefault();\n    try {\n      setApproving(true);\n      const accounts = await web3.eth.getAccounts();\n      const approveTrans = await factory.methods\n        .approveTransaction(hash)\n        .send({ from: accounts[0] });\n      setApproving(false);\n      setApproved(true);\n      setDeclined(false);\n      loadData(hash);\n    } catch (err) {\n      setApproving(false);\n      console.log(err);\n    }\n  };\n\n  const declineTransaction = async (e) => {\n    e.preventDefault();\n    try {\n      setApproving(true);\n      const accounts = await web3.eth.getAccounts();\n      const declineTx = await factory.methods\n        .declineTransaction(hash)\n        .send({ from: accounts[0] });\n      setApproving(false);\n      setDeclined(true);\n      setApproved(false);\n      loadData(hash);\n    } catch (err) {\n      setApproving(false);\n      console.log(err);\n    }\n  };\n\n  const [show, setShow] = useState(false);\n  const [info, setInfo] = useState(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = async (item) => {\n    setInfo(null);\n    setShow(true);\n    const userInfo = await factory.methods.userMap(item.id).call();\n    setInfo(userInfo);\n  };\n\n  const handleOpenImage = () => {\n    window.open(`https://gateway.ipfs.io/ipfs/${hash}`);\n  };\n\n  const windowTime = (item, user) => {\n    const createdTime = parseInt(item.timestamp) * 1000;\n    const day = 86400000;\n    switch (user.role) {\n      case \"LA\":\n        return 0;\n      case \"HOD\":\n        return createdTime + day;\n      case \"FO\":\n        return createdTime + 3 * day;\n      case \"REG\":\n        return createdTime + 5 * day;\n      case \"VC\":\n        return createdTime + 7 * day;\n      case \"CC\":\n        return createdTime + 10 * day;\n      default:\n        return 0;\n    }\n  };\n\n  // Renderer callback with condition\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <p>Time Window Closed!</p>;\n    } else {\n      // Render a countdown\n      return (\n        <div>\n          <p>\n            <span>\n              <strong>{days}:</strong>\n              <strong>{hours}:</strong>\n              <strong>{minutes}:</strong>\n              <strong>{seconds}</strong>\n            </span>{\" \"}\n            Hours\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Container className=\"home-right-info\">\n      {isEmpty ? (\n        <img src={Empty} alt=\"no data\" />\n      ) : (\n        <div\n          style={{\n            minHeight: \"85vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {loading || !item || !userInfo ? (\n            <div>\n              <Spinner animation=\"border\" variant=\"primary\" />\n              <h5>{loadingText}</h5>\n            </div>\n          ) : (\n            <Form className=\"text-left\">\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Transaction Id</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Transaction Id\"\n                  value={item ? item.id : \"\"}\n                  readOnly\n                />\n                <Form.Text className=\"text-muted\">\n                  Uniquely generated transaction id at the time when transaction\n                  has been created, This id will never change\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Document Hash</Form.Label>\n                <Form.Control\n                  readOnly\n                  type=\"text\"\n                  placeholder=\"Document Hash\"\n                  value={hash ? hash : \"\"}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                <Form.Label>Uploaded Document</Form.Label>\n                <Row>\n                  {/* <Col>\n                    <Form.Control type=\"file\" disabled />\n                  </Col> */}\n                  <Col>\n                    <Button\n                      onClick={handleOpenImage}\n                      size=\"sm\"\n                      disabled={!auth}\n                      variant=\"secondary\"\n                    >\n                      View File\n                    </Button>\n                  </Col>\n                  {item.status === \"APPROVED\" ||\n                  item.status === \"DECLINED\" ||\n                  item.status === \"EXPIRED\" ? (\n                    \"\"\n                  ) : (\n                    <Col>\n                      <Countdown\n                        renderer={renderer}\n                        date={windowTime(item, userInfo)}\n                      />\n                    </Col>\n                  )}\n                  <Col>\n                    <div\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                    >\n                      <Button\n                        size=\"sm\"\n                        variant={\n                          item.status === \"DECLINED\" ? \"danger\" : \"success\"\n                        }\n                      >\n                        Amount: Rs {item ? item.amount : \"Loading...\"}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Add Comment</Form.Label>\n                <Form.Control\n                  placeholder=\"Add any comment...\"\n                  as=\"textarea\"\n                  readOnly\n                  value={item ? item.comment : \"\"}\n                  rows={3}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                <Form.Label>Approved by</Form.Label>\n                <Form.Control className=\"approval-list\" as=\"div\" multiple>\n                  {approvals.length > 0 ? (\n                    approvals.map((item, index) => (\n                      <div\n                        className=\"approval-item\"\n                        // key={item.id}\n                        key={item}\n                      >\n                        {/* {`${item.firstName} ${item.lastName} [${item.role}]`} */}\n                        <p>{item.name}</p>\n                        <p\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\n                          onClick={() => handleShow(item)}\n                        >\n                          More Info\n                        </p>\n                      </div>\n                    ))\n                  ) : (\n                    <option key={\"loading\"}>Loading...</option>\n                  )}\n                </Form.Control>\n              </Form.Group>\n              {item.status === \"APPROVED\" && (\n                <Alert key=\"1\" variant=\"success\">\n                  The transaction has been approved by all the authorities\n                </Alert>\n              )}\n              {item.status === \"DECLINED\" && (\n                <Alert key=\"5\" variant=\"danger\">\n                  The transaction has been declined by{\" \"}\n                  {item.currentApprovalRole}.\n                </Alert>\n              )}\n              {item.status === \"EXPIRED\" && (\n                <Alert key=\"7\" variant=\"danger\">\n                  The transaction is expired and the approval window is closed.{\" \"}\n                  {item.currentApprovalRole}.\n                </Alert>\n              )}\n              {isWaiting && (\n                <Alert key=\"6\" variant=\"warning\">\n                  Wait for {item.currentApprovalRole} to approve the transaction\n                </Alert>\n              )}\n              {isApproved && (\n                <Button disabled variant=\"success\">\n                  Approved\n                </Button>\n              )}\n              {isDeclined && (\n                <Button disabled variant=\"danger\">\n                  Declined\n                </Button>\n              )}\n              {item.status === \"PENDING\" && !isWaiting && (\n                <div>\n                  {!isApproved && !isDeclined && (\n                    <>\n                      {auth &&\n                        userInfo &&\n                        userInfo.role !== \"LA\" &&\n                        userInfo.role !== \"Owner\" && (\n                          <div>\n                            <Button\n                              disabled={approving}\n                              onClick={!approving ? approveTransaction : null}\n                              variant=\"primary\"\n                              type=\"submit\"\n                            >\n                              {!approving\n                                ? \"Approve Transaction\"\n                                : \"Loading...\"}\n                            </Button>\n                            <Button\n                              style={{ marginLeft: \"1rem\" }}\n                              disabled={approving}\n                              onClick={!approving ? declineTransaction : null}\n                              variant=\"danger\"\n                              type=\"submit\"\n                            >\n                              {!approving ? \"Decline\" : \"Loading...\"}\n                            </Button>\n                          </div>\n                        )}\n                    </>\n                  )}\n                </div>\n              )}\n            </Form>\n          )}\n        </div>\n      )}\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Approval Info</Modal.Title>\n        </Modal.Header>\n        {info ? (\n          <Modal.Body>\n            <p className=\"modal-para\">\n              <span>Address:</span> {info.id}\n            </p>\n            <p className=\"modal-para\">\n              <span>Name:</span> {info.name}\n            </p>\n            <p className=\"modal-para\">\n              <span>Role:</span> {info.role}\n            </p>\n            <p className=\"modal-para\">\n              <span>Approved Txs:</span> {info.approveCount}\n            </p>\n            <p className=\"modal-para\">\n              <span>Declined Txs:</span> Rs {info.declineCount}\n            </p>\n            <p className=\"modal-para\">\n              <span>Slipped Txs:</span> Rs {info.slipCount}\n            </p>\n          </Modal.Body>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              minHeight: \"100px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Spinner animation=\"border\" variant=\"primary\" />\n          </div>\n        )}\n      </Modal>\n    </Container>\n  );\n};\n\nexport default RightInfo;\n","import React, {useEffect, useState} from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport LeftList from \"../../components/Home/LeftList\";\nimport RightInfo from \"../../components/Home/RightInfo\";\nimport { Route } from \"react-router-dom\";\nimport factory from \"../../ethereum/factory\";\n\nconst Home = ({auth}) => {\n\n  const [transactions, setTransactions] = useState([]);\n  //new\n  useEffect(async () => {\n    const transactionList = await factory.methods\n    .listTransaction().call();\n    setTransactions(transactionList)\n  }, [])\n\n  return (\n    <div style={{ padding: \"0 1rem\" }}>\n      <Row>\n        <Col md={4}>\n          <LeftList items={transactions} />\n        </Col>\n        <Col md={8}>\n          <Route path={\"/BAPS/home/:hash\"}>\n            <RightInfo isEmpty={false} auth={auth} />\n          </Route>\n          <Route path={\"/BAPS/home/:\"} exact>\n            <RightInfo isEmpty={true} auth={auth} />\n          </Route>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport factory from \"../../ethereum/factory\";\n\nconst MemberItem = ({ item, handleShowDelete }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(async () => {\n    const userInfo = await factory.methods.userMap(item).call();\n    setData(userInfo);\n  }, [item]);\n\n  return (\n    <tr>\n      <td>{data && data.number}</td>\n      <td>{data && data.name}</td>\n      <td>{data && data.role}</td>\n      <td>\n        {data && data.approveCount} / {data && data.declineCount} /{\" \"}\n        {data && data.slipCount}\n      </td>\n      <td>{data && data.id}</td>\n      <td>\n        {data && data.id !== \"0x0000000000000000000000000000000000000000\" && (\n          <Button\n            onClick={() => handleShowDelete(data && data.number)}\n            variant=\"outline-danger\"\n          >\n            Delete\n          </Button>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default MemberItem;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport web3 from \"../../ethereum/web3\";\nimport factory from \"../../ethereum/factory\";\nimport MemberItem from \"./MemberItem\";\nimport \"./Member.css\";\n\nconst Member = ({ auth }) => {\n  const [show, setShow] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"Owner\");\n  const [maxAmount, setMaxAmount] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [createAlert, setCreateAlert] = useState(false);\n  const [creating, setCreating] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [index, setIndex] = useState(null);\n  const [roleList, setRoleList] = useState([]);\n\n  const handleClose = () => {\n    setShow(false);\n    setShowDelete(false);\n    setCreateAlert(false);\n  };\n  const handleShow = () => setShow(true);\n\n  const handleShowDelete = (number) => {\n    setShowDelete(true);\n    setIndex(number);\n  };\n\n  useEffect(async () => {\n    fetchUserList();\n    fetchRoleList();\n  }, []);\n\n  useEffect(() => {\n    if (auth == false) {\n      window.location.replace(\"/home\");\n    }\n  }, [auth]);\n\n  const fetchRoleList = async () => {\n    try {\n      const _roleList = await factory.methods.listRoles().call();\n      //   const filteredList = userList.filter(item => item.id !== \"0x0000000000000000000000000000000000000000\");\n      setRoleList(_roleList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchUserList = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      const userList = await factory.methods.listUsers().call();\n      const filteredList = userList.filter(\n        (item) => item !== \"0x0000000000000000000000000000000000000000\"\n      );\n      setUsers(filteredList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createUser = async () => {\n    if (name === \"\" || role === \"\" || id === \"\") {\n      return setCreateAlert(true);\n    }\n    try {\n      setCreateAlert(false);\n      setCreating(true);\n      const accounts = await web3.eth.getAccounts();\n      const user = await factory.methods\n        .createUser(role, id, name)\n        .send({ from: accounts[0] });\n      setCreating(false);\n      setShow(false);\n      fetchUserList();\n    } catch (err) {\n      console.log(err);\n      setCreating(false);\n    }\n  };\n\n  const deleteUser = async () => {\n    try {\n      if (!index) {\n        return console.log(\"index cannot be null\");\n      }\n      setDeleting(true);\n      const accounts = await web3.eth.getAccounts();\n      const deletedUser = await factory.methods.deleteUser(index).send({\n        from: accounts[0],\n      });\n      setDeleting(false);\n      setShowDelete(false);\n      fetchUserList();\n    } catch (err) {\n      setDeleting(false);\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\n        <Row>\n          <Col>\n            <h2>All Members</h2>\n          </Col>\n          <Col style={{ textAlign: \"right\" }}>\n            <Button onClick={handleShow}>Add Member</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Role</th>\n                  <th>Approved/Declined/Slipped</th>\n                  <th>Address</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.length !== 0 &&\n                  users.map((item, index) => (\n                    <MemberItem\n                      key={item.id + index}\n                      item={item}\n                      handleShowDelete={handleShowDelete}\n                    />\n                  ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Member</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {createAlert && (\n            <Alert key=\"1\" variant=\"danger\">\n              No input should be empty!\n            </Alert>\n          )}\n          <Form className=\"text-left\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Member Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. Sanil Gandhi\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Member roles</Form.Label>\n              <div>\n                <select\n                  className=\"member-create-select\"\n                  onChange={(e) => setRole(e.target.value)}\n                >\n                  <option value=\"Owner\">\n                    Admin (Owner)\n                  </option>\n                  {roleList.map((role) => (\n                    <option value={role.role}>\n                      {role.name} ({role.role})\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Public Key</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. 0x3Ec8719804c7D39B71446E0edFe88893b128b24E\"\n                value={id}\n                onChange={(e) => setId(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            disabled={creating || name === \"\" || id === \"\"}\n            onClick={!creating ? createUser : null}\n            variant=\"primary\"\n          >\n            {creating ? \"Loading...\" : \"Create\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showDelete} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Member</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure, You want to delete this member?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            disabled={deleting}\n            variant=\"danger\"\n            onClick={!deleting ? deleteUser : null}\n          >\n            {!deleting ? \"Delete\" : \"Loading...\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Member;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Nots.css\";\nimport { ListGroup, Badge } from \"react-bootstrap\";\nimport factory from \"../../ethereum/factory\";\n\nconst Notification = () => {\n  const [nots, setNots] = useState([]);\n  //new\n  useEffect(async () => {\n    let list = await factory.methods.listNotification().call();\n    let arr = [...list];\n    let ns = arr.reverse();\n    setNots(ns);\n  }, []);\n\n  return (\n    <div className=\"nots\">\n      {nots.length > 0 &&\n        nots.map((item, index) => {\n          let variant;\n          if (item.status === \"create\") {\n            variant = \"warning\";\n          } else if (item.status === \"pending\") {\n            variant = \"success\";\n          } else {\n            variant = \"primary\";\n          }\n\n          return (\n            <ListGroup as=\"ol\" numbered>\n              <ListGroup.Item\n                as=\"li\"\n                variant={variant}\n                className=\"d-flex mb-2 justify-content-between align-items-start\"\n              >\n                <div className=\"ms-2 me-auto d-flex flex-column align-items-start\">\n                  <h5 className=\"fw-bold\">{item.title}</h5>\n                  <p>{item.message}</p>\n                </div>\n                <Badge variant=\"primary\" pill>\n                  {index + 1}\n                </Badge>\n              </ListGroup.Item>\n            </ListGroup>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Alert,\n  Table,\n} from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\n\nconst CreateRole = ({auth}) => {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [minAmount, setMinAmount] = useState(\"\");\n  const [maxAmount, setMaxAmount] = useState(\"\");\n  const [creating, setCreating] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n\n  useEffect(() => {\n    fetchRoleList()\n    if(auth == false) {\n        window.location.replace(\"/home\")\n    }\n  }, [auth])\n\n  \n  const fetchRoleList = async () => {\n    try {\n      const roleList = await factory.methods.listRoles().call();\n    //   const filteredList = userList.filter(item => item.id !== \"0x0000000000000000000000000000000000000000\");\n      setRoles(roleList);\n      console.log(roleList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createRole = async (e) => {\n    e.preventDefault();\n    try {\n      setCreating(true);\n      const accounts = await web3.eth.getAccounts();\n      const myAccount = accounts[0];\n\n      const createdRole = await factory.methods\n        .createRole(id, name, maxAmount, minAmount)\n        .send({\n          from: myAccount,\n        });\n      const tx = createdRole.transactionHash;\n      setCreating(false);\n      setSuccess(\"Successfully created Role \" + id + \" with tx hash  \" + tx);\n      fetchRoleList()\n    } catch (err) {\n      setError(\"Error in creating role!\");\n      setSuccess(\"\");\n      setCreating(false);\n      console.log(err);\n    }\n  };\n\n  const handleDeleteRole = () => {\n\n  }\n\n  return (\n    <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\n      <h2>Create Role</h2>\n      <Row>\n        <Col>\n          {(success !== \"\" || error !== \"\") && (\n            <Alert key=\"1\" variant={success !== \"\" ? \"success\" : \"danger\"}>\n              {success !== \"\" ? success : error}\n            </Alert>\n          )}\n          <Form className=\"text-left\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Role Id</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Role Id\"\n                value={id}\n                onChange={(e) => setId(e.target.value)}\n              />\n              <Form.Text className=\"text-muted\">\n                Unique id for the role LA, HOD, FO, REG, VC, CC\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Role Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Role Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Maximum Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Maximum Amount\"\n                value={maxAmount}\n                onChange={(e) => setMaxAmount(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Minimum Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Minimum Amount\"\n                value={minAmount}\n                onChange={(e) => setMinAmount(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                creating ||\n                id === \"\" ||\n                name === \"\" ||\n                maxAmount === \"\" ||\n                minAmount === \"\"\n              }\n              onClick={!creating ? createRole : null}\n            >\n              {!creating ? \"Create\" : \"Loading...\"}\n            </Button>\n            <Button\n              style={{ marginLeft: \"1rem\" }}\n              variant=\"outline-danger\"\n              type=\"submit\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        </Col>\n        <Col>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Role Id</th>\n                <th>Role Name</th>\n                <th>Max Amount</th>\n                <th>Min Amount</th>\n                {/* <th>Action</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {roles.length !== 0 &&\n                roles.map((item, index) => (\n                  <tr key={item.role + index}>\n                    <td>{item.number}</td>\n                    <td>{item.role}</td>\n                    <td>{item.name}</td>\n                    <td>{item.maxAmount}</td>\n                    <td>Rs {item.minAmount}</td>\n                    {/* <td>\n                      <Button\n                        onClick={() => handleDeleteRole(item.role)}\n                        variant=\"outline-danger\"\n                      >\n                        Delete\n                      </Button>\n                    </td> */}\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CreateRole;\n","import React from \"react\";\nimport Home from \"./Home/Home\";\nimport { Route } from \"react-router-dom\";\nimport Create from \"./Create/Create\";\nimport Member from './Member/Member'\nimport Notification from \"./Notification/Notification\";\nimport CreateRole from \"./Create/CreateRole\";\n\nconst Layout = ({auth}) => {\n  return (\n    <div style={{ paddingTop: \"4.5rem\" }}>\n      <Route path=\"/BAPS/home\" >\n        <Home auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/create\">\n        <Create auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/create-role\">\n        <CreateRole auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/members\">\n        <Member auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/notification\">\n        <Notification auth={auth} />\n      </Route>\n    </div>\n  );\n};\n\nexport default Layout;\n","import \"./App.css\";\nimport Header from \"./components/Navbar/Header\";\nimport Layout from \"./containers/Layout\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport web3 from \"./ethereum/web3\";\nimport factory from \"./ethereum/factory\";\nimport { useState } from \"react\";\nimport UnAuth from \"./containers/UnAuth/UnAuth\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const [auth, setAuth] = useState(null);\n\n  useEffect(() => {\n    let accounts;\n\n    async function loadData() {\n      try {\n        accounts = await web3.eth.getAccounts();\n        const isMember = await factory.methods\n          .authMember()\n          .call({ from: accounts[0] });\n        setAuth(true);\n      } catch (err) {\n        setAuth(false);\n        console.log(err);\n      }\n    }\n\n    async function updateMetamaskAcc() {\n      loadData();\n      window.ethereum.on(\"accountsChanged\", async function () {\n        // Time to reload your interface with accounts[0]!\n        loadData();\n        // accounts = await web3.eth.getAccounts();\n      });\n    }\n    updateMetamaskAcc();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Router>\n        <Header auth={auth} />\n          <Route path=\"/BAPS\">\n            <Layout auth={auth} />\n          </Route>\n        </Router>\n      </div>\n      {/* {auth ? (\n        <div>\n          <Header />\n          <Router>\n            <Route path=\"/\">\n              <Layout />\n            </Route>\n          </Router>\n        </div>\n      ) : (\n        <div\n          style={{\n            height: \"100vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {auth == null ? (\n            <Spinner animation=\"border\" variant=\"primary\" />\n          ) : (\n            <UnAuth />\n          )}\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import web3 from './web3';\nimport BatuFi from './build/BatuFi.json';\n\nconst instance = new web3.eth.Contract(\n    BatuFi.abi,\n    '0x714211C198B494260164F28b0b56cc50e46F8949'\n);\n\nexport default instance;","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport sha256 from \"sha256\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { uid } from \"uid\";\nimport ipfs from \"../../ethereum/ipfs\";\nconst LogisticRegression = require(\"ml-logistic-regression\");\nconst { Matrix } = require(\"ml-matrix\");\n\nconst Create = ({ auth }) => {\n  const [file, setFile] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [hash, setHash] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [creating, setCreating] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [estimate, setEstimate] = useState();\n\n  useEffect(() => {\n    if (auth == false) {\n      window.location.replace(\"/home\");\n    }\n  }, [auth]);\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n  function getImageBuffer(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => resolve({ buffer: Buffer(reader.result) });\n      reader.onerror = (error) => reject(error);\n    });\n  }\n\n  const createTransaction = async (e) => {\n    e.preventDefault();\n    try {\n      setCreating(true);\n      let salt = \"\";\n      let id = \"\";\n      const accounts = await web3.eth.getAccounts();\n      const imageBuffer = await getImageBuffer(file);\n      const data = await getBase64(file);\n      salt = sha256(data);\n      setHash(salt);\n      id = uid(24);\n      setId(id);\n\n      ipfs.add(imageBuffer.buffer, async (err, result) => {\n        if (err) {\n          console.log(err);\n          setError(\"Error, \", err.message);\n          return;\n        }\n        const docHash = result[0].hash;\n        const transaction = await factory.methods\n          .createTransaction(id, docHash, \"default\", comment, amount)\n          .send({\n            from: accounts[0],\n          });\n        const tx = transaction.transactionHash;\n\n        //* calculate the estimate duration for the procurrement to be approved by all the authority\n        calculateEstimate(amount, transaction);\n\n        setCreating(false);\n        setFile(\"\");\n        setAmount(\"\");\n        setComment(\"\");\n        setSuccess(\n          \"Successfully created transaction by \" +\n            accounts[0] +\n            \" with transaction hash \" +\n            tx\n        );\n        setError(\"\");\n      });\n    } catch (err) {\n      setError(\"Error in creating transaction!\");\n      setSuccess(\"\");\n      setCreating(false);\n      console.log(err);\n    }\n  };\n\n  // function that calculates the estimate duration\n  const calculateEstimate = async (amount, tx) => {\n    // get all the previous transaction amount and add the latest tx amount\n    const transactionList = await factory.methods.listTransaction().call();\n    let list = [];\n    let dateList = [];\n    let lastIndex = 0;\n    transactionList.map((item, index) => {\n      list.push([index, item.amount]);\n      dateList.push(item.timestamp);\n      lastIndex = index;\n    });\n    const matrixAmount = [...list, [lastIndex + 1, amount]];\n    const matrixDates = dateList;\n\n    // Our training set (X,Y).\n    const X = new Matrix(matrixAmount);\n\n    // get all the\n    const Y = Matrix.columnVector(matrixDates);\n\n    // We will train our model.\n    const logreg = new LogisticRegression({\n      numSteps: 1000,\n      learningRate: 5e-3,\n    });\n    logreg.train(X, Y);\n\n    const finalResults = logreg.predict(X);\n    setEstimate(finalResults)\n  };\n\n  return (\n    <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\n      <h2>Create Transaction</h2>\n      <Row>\n        <Col>\n          {(success !== \"\" || error !== \"\") && (\n            <Alert key=\"1\" variant={success !== \"\" ? \"success\" : \"danger\"}>\n              {success !== \"\" ? success : error}\n            </Alert>\n          )}\n          <Form className=\"text-left\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Transaction Id</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Transaction Id\"\n                value={id}\n                readOnly\n              />\n              <Form.Text className=\"text-muted\">\n                Uniquely generated transaction id at the time when transaction\n                has been created, This id will never change\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Document Hash</Form.Label>\n              <Form.Control\n                readOnly\n                type=\"text\"\n                placeholder=\"Transaction Hash\"\n                value={hash}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"e.g 15000\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label>Uploaded Document</Form.Label>\n              <Row>\n                <Col>\n                  <Form.Control\n                    onChange={(e) => setFile(e.target.files[0])}\n                    type=\"file\"\n                  />\n                </Col>\n                <Col>\n                  <Button size=\"sm\" variant=\"secondary\">\n                    View File\n                  </Button>\n                </Col>\n              </Row>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Add Comment</Form.Label>\n              <Form.Control\n                placeholder=\"Add any comment...\"\n                as=\"textarea\"\n                rows={3}\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={creating || amount === \"\" || file === \"\"}\n              onClick={!creating ? createTransaction : null}\n            >\n              {!creating ? \"Create\" : \"Loading...\"}\n            </Button>\n            <Button\n              style={{ marginLeft: \"1rem\" }}\n              variant=\"outline-danger\"\n              type=\"submit\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Create;\n","// import ipfsClient from \"ipfs-http-client\";\nimport IPFS from \"ipfs-api\";\n\nconst projectId = \"2UIZMWmPzQ6AiKfmzePxDfGM0U8\";\nconst projectSecret = \"78f5e328c7bb8aed7ab4ffface404949\";\nconst auth =\n  \"Basic \" + Buffer.from(projectId + \":\" + projectSecret).toString(\"base64\");\n\n// const ipfs = ipfsClient.create({\n//     host: 'ipfs.infura.io',\n//     port: 5001,\n//     protocol: 'https',\n//     headers: {\n//         authorization: auth\n//     }\n// })\n\nconst ipfs = new IPFS({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n  headers: {\n    authorization: auth,\n  },\n});\n\nexport default ipfs;\n\n// export default ipfs;\n","import Web3 from 'web3';\n\nlet web3;\n\nif(typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // In the browser and metamask is running\n    web3 = new Web3(window.web3.currentProvider);\n}else {\n    // In the server or user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\n        'https://sepolia.infura.io/v3/f47f46b099464563b22b179b0567ac33'\n    )\n    web3 = new Web3(provider)\n}\n\nexport default web3;"],"sourceRoot":""}