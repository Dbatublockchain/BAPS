{"version":3,"sources":["components/Navbar/Header.js","components/Items/TransactionItem.js","components/Home/LeftList.js","assets/empty_data_set.png","components/Home/RightInfo.js","containers/Home/Home.js","containers/Member/MemberItem.js","containers/Member/Member.js","containers/Notification/Notification.js","containers/Create/CreateRole.js","containers/Layout.js","App.js","reportWebVitals.js","index.js","ethereum/factory.js","containers/Create/Create.js","ethereum/ipfs.js","ethereum/web3.js"],"names":["Header","_ref","auth","_useState","useState","_useState2","_slicedToArray","show","setShow","_useState3","_useState4","myAddress","setMyAddress","_useState5","_useState6","myBalance","setBalance","_useState7","_useState8","userInfo","setUserInfo","handleClose","useEffect","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","connectMetamask","updateMetamaskAcc","stop","fetchUserInfo","_ref3","_callee2","address","_userInfo","_context2","factory","methods","userMap","call","sent","t0","console","log","_x","apply","arguments","_ref4","_callee4","_context4","window","ethereum","on","_callee3","_context3","request","method","then","res","accountChangeHandler","alert","account","getbalance","params","_balance","ethers","utils","formatEther","_jsxs","children","Navbar","style","padding","bg","fixed","variant","expand","_jsx","Brand","href","Toggle","Collapse","id","Nav","className","Link","NavDropdown","title","menuVariant","role","Item","onClick","Dropdown","name","Menu","ItemText","parseFloat","toFixed","concat","approveCount","declineCount","slipCount","Button","Modal","onHide","closeButton","Title","Body","Footer","TransactionItem","item","Card","margin","marginTop","border","Text","docHash","comment","amount","to","LeftList","items","list","_toConsumableArray","reverse","InputGroup","FormControl","placeholder","length","map","index","RightInfo","isEmpty","hash","useParams","setItem","approvals","setApprovals","approving","setApproving","isApproved","setApproved","_useState9","_useState10","isDeclined","setDeclined","_useState11","_useState12","loading","setLoading","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","isWaiting","setWaiting","_useState19","_useState20","setExpired","_useState21","_useState22","loadingText","setLoadingText","loadData","_ref2","accounts","trans","app","approvalList","appAlreadyList","validateTxDuration","web3","eth","getAccounts","transactionMap","listApprovals","filter","a","status","currentApprovalRole","_x3","approveTransaction","_ref6","_callee5","e","_context5","preventDefault","send","from","_x4","declineTransaction","_ref7","_callee6","_context6","_x5","_useState23","_useState24","_useState25","_useState26","info","setInfo","handleShow","_ref8","_callee7","_context7","_x6","Container","src","Empty","alt","minHeight","display","alignItems","justifyContent","Form","Group","controlId","Label","Control","type","value","readOnly","Row","Col","open","size","disabled","Countdown","renderer","_ref9","days","hours","minutes","seconds","completed","date","user","createdTime","parseInt","timestamp","day","windowTime","as","rows","multiple","color","cursor","Alert","_Fragment","marginLeft","Spinner","animation","Home","transactions","setTransactions","transactionList","listTransaction","md","Route","path","process","exact","MemberItem","handleShowDelete","data","setData","number","Member","showDelete","setShowDelete","users","setUsers","setName","setRole","setId","createAlert","setCreateAlert","creating","setCreating","deleting","setDeleting","setIndex","roleList","setRoleList","fetchUserList","fetchRoleList","location","replace","_roleList","listRoles","userList","filteredList","listUsers","createUser","_ref5","abrupt","deleteUser","paddingTop","textAlign","Table","striped","bordered","hover","backdrop","keyboard","onChange","target","Notification","nots","setNots","arr","ns","listNotification","ListGroup","numbered","message","Badge","pill","CreateRole","minAmount","setMinAmount","maxAmount","setMaxAmount","error","setError","success","setSuccess","roles","setRoles","createRole","myAccount","createdRole","tx","transactionHash","Layout","Create","App","setAuth","_loadData","authMember","_updateMetamaskAcc","Router","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","instance","Contract","BatuFi","abi","LogisticRegression","require","Matrix","file","setFile","setAmount","setComment","setHash","setEstimate","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","getImageBuffer","readAsArrayBuffer","onloadend","buffer","Buffer","createTransaction","salt","_id","imageBuffer","sha256","uid","ipfs","add","err","transaction","calculateEstimate","_x2","dateList","lastIndex","matrixAmount","matrixDates","X","Y","logreg","finalResults","push","columnVector","numSteps","learningRate","train","predict","files","projectId","toString","IPFS","host","port","protocol","headers","authorization","Web3","currentProvider","provider","providers","HttpProvider"],"mappings":"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","file":"static/js/main.e1f24684.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport {\n  Navbar,\n  Nav,\n  Button,\n  Modal,\n  Dropdown,\n  NavDropdown,\n} from \"react-bootstrap\";\nimport { ethers } from \"ethers\";\nimport factory from \"../../ethereum/factory\";\n\nconst Header = ({ auth }) => {\n  const [show, setShow] = useState(false);\n  const [myAddress, setMyAddress] = useState(\"\");\n  const [myBalance, setBalance] = useState(\"\");\n  const [userInfo, setUserInfo] = useState(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  useEffect(async () => {\n    connectMetamask();\n    updateMetamaskAcc();\n  }, []);\n\n  const fetchUserInfo = async (address) => {\n    try {\n      const userInfo = await factory.methods.userMap(address).call();\n      setUserInfo(userInfo);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateMetamaskAcc = async () => {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      // Time to reload your interface with accounts[0]!\n      connectMetamask();\n      // accounts = await web3.eth.getAccounts();\n    });\n  };\n\n  const connectMetamask = () => {\n    // Asking if metamask is already present or not\n    if (window.ethereum) {\n      // res[0] for fetching a first wallet\n      window.ethereum\n        .request({ method: \"eth_requestAccounts\" })\n        .then((res) => accountChangeHandler(res[0]));\n    } else {\n      alert(\"install metamask extension!!\");\n    }\n  };\n\n  const accountChangeHandler = (account) => {\n    // Setting an address data\n    if (account) {\n      fetchUserInfo(account);\n      setMyAddress(account);\n      // Setting a balance\n      getbalance(account);\n    } else {\n      setMyAddress(\"\");\n    }\n  };\n\n  const getbalance = (address) => {\n    // Requesting balance method\n    window.ethereum\n      .request({\n        method: \"eth_getBalance\",\n        params: [address, \"latest\"],\n      })\n      .then((_balance) => {\n        if (_balance) {\n          // Setting balance\n          setBalance(ethers.utils.formatEther(_balance));\n        }\n      });\n  };\n\n  return (\n    <div>\n      <Navbar\n        style={{ padding: \"1rem 4rem\" }}\n        bg=\"dark\"\n        fixed=\"top\"\n        variant=\"dark\"\n        expand=\"lg\"\n      >\n        <Navbar.Brand href=\"/BAPS/home\">DBATU FINANCE</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/BAPS/home\">Home</Nav.Link>\n            <Nav.Link href=\"https://etherscan.io/\">Etherscan</Nav.Link>\n            {auth && <Nav.Link href=\"/members\">Members</Nav.Link>}\n            {auth && userInfo && (\n              <NavDropdown\n                id=\"nav-dropdown-light-example\"\n                title=\"Create\"\n                menuVariant=\"dark\"\n              >\n                {userInfo.role === \"LA\" && (\n                  <NavDropdown.Item href=\"/BAPS/create\">\n                    Create Procurement\n                  </NavDropdown.Item>\n                )}\n                {userInfo.role === \"Owner\" && (\n                  <NavDropdown.Item href=\"/BAPS/create-role\">\n                    Create Role\n                  </NavDropdown.Item>\n                )}\n              </NavDropdown>\n            )}\n            <Nav.Link href=\"#\" onClick={handleShow}>\n              Wallet\n            </Nav.Link>\n            <NavDropdown\n              id=\"nav-dropdown-light-example\"\n              title=\"Get Recommendation\"\n              menuVariant=\"dark\"\n            >\n              <NavDropdown.Item href=\"/BAPS/travel-grant\">\n                Travel Grant\n              </NavDropdown.Item>\n\n              <NavDropdown.Item href=\"/BAPS/create-role\">\n                Procurement of equipment\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/BAPS/create-role\">\n                Leave Application\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"/BAPS/create-role\">\n                Medical Bill\n              </NavDropdown.Item>\n            </NavDropdown>\n            <Nav.Link href=\"/BAPS/notification\">Notification</Nav.Link>\n          </Nav>\n          {myAddress !== \"\" && userInfo ? (\n            <Dropdown>\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                Connected as : {userInfo.name === \"\" ? \"Viewer\" : userInfo.name}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Header>\n                  Name: {userInfo.name === \"\" ? \"Viewer\" : userInfo.name}\n                  <Dropdown.ItemText>\n                    Balance: {parseFloat(myBalance).toFixed(5)} Eth\n                  </Dropdown.ItemText>\n                </Dropdown.Header>\n                <Dropdown.Item>\n                  Role: {userInfo.role === \"\" ? \"Viewer\" : `${userInfo.role}`}\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  Approved Txs: {userInfo.approveCount}\n                </Dropdown.Item>\n                <Dropdown.Item>\n                  Declined Txs: {userInfo.declineCount}\n                </Dropdown.Item>\n                <Dropdown.Item>Slipped Txs: {userInfo.slipCount}</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          ) : (\n            <Button onClick={connectMetamask}>Connect to Metamask</Button>\n          )}\n          {/* <Button variant=\"outline-success\">Search</Button> */}\n        </Navbar.Collapse>\n      </Navbar>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Wallet</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Connected with Metamask, Address:\n          {myAddress}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Connect\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Badge, Card, Button } from \"react-bootstrap\";\nimport {Link} from 'react-router-dom'\n\nconst TransactionItem = ({ item }) => {\n  return (\n    <Card\n      style={{ margin: \"8px\", marginTop: \"0\" }}\n      className=\"text-left\"\n      border=\"warning\"\n    >\n      <Card.Header>ID: {item.id}</Card.Header>\n      <Card.Body>\n        <Card.Text>{item.docHash}</Card.Text>\n        <Card.Text>Comment: {item.comment}</Card.Text>\n        <Card.Text>Amount: Rs {item.amount}</Card.Text>\n        <Link to={`/BAPS/home/${item.docHash}`}>\n        <Button variant=\"primary\">View Details</Button>\n        </Link>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TransactionItem;\n","import React from \"react\";\nimport LeftListFun from \"../../functions/LeftListFun\";\nimport TransactionItem from \"../Items/TransactionItem\";\nimport \"./Home.css\";\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\n\nconst LeftList = ({items}) => {\n  // const { items } = LeftListFun();\n  let arr = [...items];\n  let list = arr.reverse();\n  \n\n  return (\n    <div className=\"home-left-list\">\n      <div style={{padding: '0 8px'}}>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            placeholder=\"Search transaction by id\"\n            aria-label=\"Search transaction by id\"\n            aria-describedby=\"basic-addon2\"\n          />\n          <Button variant=\"outline-secondary\" id=\"button-addon2\">\n            Search\n          </Button>\n        </InputGroup>\n      </div>\n      <div className=\"home-left-list-container\">\n        {list.length !== 0 && list.map((item, index) => (\n          <TransactionItem item={item} key={index + item.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeftList;\n","export default __webpack_public_path__ + \"static/media/empty_data_set.88c7d759.png\";","import React from \"react\";\nimport { useEffect } from \"react\";\nimport {\n  Form,\n  Button,\n  Container,\n  Row,\n  Col,\n  Alert,\n  Spinner,\n  Modal,\n} from \"react-bootstrap\";\nimport Countdown from \"react-countdown\";\n\nimport { useParams } from \"react-router-dom\";\nimport Empty from \"../../assets/empty_data_set.png\";\nimport \"./Home.css\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { useState } from \"react\";\n\nconst RightInfo = ({ isEmpty, auth }) => {\n  const { hash } = useParams();\n\n  const [item, setItem] = useState(null);\n  const [approvals, setApprovals] = useState([]);\n  const [approving, setApproving] = useState(false);\n  const [isApproved, setApproved] = useState(false);\n  const [isDeclined, setDeclined] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [eligible, setEligible] = useState(true);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isWaiting, setWaiting] = useState(false);\n  const [isExpired, setExpired] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"\");\n\n  useEffect(() => {\n    loadData(hash);\n    updateMetamaskAcc(hash);\n  }, [hash]);\n\n  const loadData = async (hash) => {\n    setUserInfo(null);\n    setItem(null);\n    setApprovals([]);\n    setApproved(false);\n    setDeclined(false);\n    setWaiting(false);\n    setLoading(true);\n\n    setLoadingText(\"Validating tx...\");\n    await factory.methods.validateTxDuration(hash).call();\n\n    setLoadingText(\"Fetching user info...\");\n    const accounts = await web3.eth.getAccounts();\n    //fetch user info\n    const _userInfo = await factory.methods.userMap(accounts[0]).call();\n    setUserInfo(_userInfo);\n\n    setLoadingText(\"Fetching tx info...\");\n    // fetch tx info\n    const trans = await factory.methods.transactionMap(hash).call();\n    setItem(trans);\n\n    // fetch tx approvals info\n    const app = await factory.methods.listApprovals(hash).call();\n    const approvalList = app.approvalList;\n    setApprovals(approvalList);\n\n    setLoadingText(\"Finalizing the tx...\");\n    // check if already approved or declined\n    const appAlreadyList = approvalList.filter((a) => a.id === _userInfo.id);\n    if (trans.status === \"EXPIRED\") {\n      setExpired(true);\n    } else if (trans.status === \"DECLINED\") {\n      if (appAlreadyList.length > 0) {\n        setApproved(true);\n      } else {\n        setDeclined(true);\n      }\n    } else if (\n      trans.status === \"PENDING\" &&\n      trans.currentApprovalRole !== _userInfo.role\n    ) {\n      setWaiting(true);\n    } else if (trans.status === \"PENDING\") {\n      if (appAlreadyList.length > 0) {\n        setApproved(true);\n      }\n    }\n    setLoadingText(\"\");\n    setLoading(false);\n  };\n\n  const fetchUserInfo = async (address) => {\n    try {\n      const _userInfo = await factory.methods.userMap(address).call();\n      setUserInfo(_userInfo);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const updateMetamaskAcc = async (hash) => {\n    window.ethereum.on(\"accountsChanged\", async function () {\n      // Time to reload your interface with accounts[0]!\n      loadData(hash);\n      // accounts = await web3.eth.getAccounts();\n    });\n  };\n\n  const approveTransaction = async (e) => {\n    e.preventDefault();\n    try {\n      setApproving(true);\n      const accounts = await web3.eth.getAccounts();\n      const approveTrans = await factory.methods\n        .approveTransaction(hash)\n        .send({ from: accounts[0] });\n      setApproving(false);\n      setApproved(true);\n      setDeclined(false);\n      loadData(hash);\n    } catch (err) {\n      setApproving(false);\n      console.log(err);\n    }\n  };\n\n  const declineTransaction = async (e) => {\n    e.preventDefault();\n    try {\n      setApproving(true);\n      const accounts = await web3.eth.getAccounts();\n      const declineTx = await factory.methods\n        .declineTransaction(hash)\n        .send({ from: accounts[0] });\n      setApproving(false);\n      setDeclined(true);\n      setApproved(false);\n      loadData(hash);\n    } catch (err) {\n      setApproving(false);\n      console.log(err);\n    }\n  };\n\n  const [show, setShow] = useState(false);\n  const [info, setInfo] = useState(null);\n\n  const handleClose = () => setShow(false);\n  const handleShow = async (item) => {\n    setInfo(null);\n    setShow(true);\n    const userInfo = await factory.methods.userMap(item.id).call();\n    setInfo(userInfo);\n  };\n\n  const handleOpenImage = () => {\n    window.open(`https://gateway.ipfs.io/ipfs/${hash}`);\n  };\n\n  const windowTime = (item, user) => {\n    const createdTime = parseInt(item.timestamp) * 1000;\n    const day = 86400000;\n    switch (user.role) {\n      case \"LA\":\n        return 0;\n      case \"HOD\":\n        return createdTime + day;\n      case \"FO\":\n        return createdTime + 3 * day;\n      case \"REG\":\n        return createdTime + 5 * day;\n      case \"VC\":\n        return createdTime + 7 * day;\n      case \"CC\":\n        return createdTime + 10 * day;\n      default:\n        return 0;\n    }\n  };\n\n  // Renderer callback with condition\n  const renderer = ({ days, hours, minutes, seconds, completed }) => {\n    if (completed) {\n      // Render a completed state\n      return <p>Time Window Closed!</p>;\n    } else {\n      // Render a countdown\n      return (\n        <div>\n          <p>\n            <span>\n              <strong>{days}:</strong>\n              <strong>{hours}:</strong>\n              <strong>{minutes}:</strong>\n              <strong>{seconds}</strong>\n            </span>{\" \"}\n            Hours\n          </p>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Container className=\"home-right-info\">\n      {isEmpty ? (\n        <img src={Empty} alt=\"no data\" />\n      ) : (\n        <div\n          style={{\n            minHeight: \"85vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {loading || !item || !userInfo ? (\n            <div>\n              <Spinner animation=\"border\" variant=\"primary\" />\n              <h5>{loadingText}</h5>\n            </div>\n          ) : (\n            <Form className=\"text-left\">\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Transaction Id</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Transaction Id\"\n                  value={item ? item.id : \"\"}\n                  readOnly\n                />\n                <Form.Text className=\"text-muted\">\n                  Uniquely generated transaction id at the time when transaction\n                  has been created, This id will never change\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Document Hash</Form.Label>\n                <Form.Control\n                  readOnly\n                  type=\"text\"\n                  placeholder=\"Document Hash\"\n                  value={hash ? hash : \"\"}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formFile\" className=\"mb-3\">\n                <Form.Label>Uploaded Document</Form.Label>\n                <Row>\n                  {/* <Col>\n                    <Form.Control type=\"file\" disabled />\n                  </Col> */}\n                  <Col>\n                    <Button\n                      onClick={handleOpenImage}\n                      size=\"sm\"\n                      disabled={!auth}\n                      variant=\"secondary\"\n                    >\n                      View File\n                    </Button>\n                  </Col>\n                  {item.status === \"APPROVED\" ||\n                  item.status === \"DECLINED\" ||\n                  item.status === \"EXPIRED\" ? (\n                    \"\"\n                  ) : (\n                    <Col>\n                      <Countdown\n                        renderer={renderer}\n                        date={windowTime(item, userInfo)}\n                      />\n                    </Col>\n                  )}\n                  <Col>\n                    <div\n                      style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                    >\n                      <Button\n                        size=\"sm\"\n                        variant={\n                          item.status === \"DECLINED\" ? \"danger\" : \"success\"\n                        }\n                      >\n                        Amount: Rs {item ? item.amount : \"Loading...\"}\n                      </Button>\n                    </div>\n                  </Col>\n                </Row>\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Add Comment</Form.Label>\n                <Form.Control\n                  placeholder=\"Add any comment...\"\n                  as=\"textarea\"\n                  readOnly\n                  value={item ? item.comment : \"\"}\n                  rows={3}\n                />\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlSelect2\">\n                <Form.Label>Approved by</Form.Label>\n                <Form.Control className=\"approval-list\" as=\"div\" multiple>\n                  {approvals.length > 0 ? (\n                    approvals.map((item, index) => (\n                      <div\n                        className=\"approval-item\"\n                        // key={item.id}\n                        key={item}\n                      >\n                        {/* {`${item.firstName} ${item.lastName} [${item.role}]`} */}\n                        <p>{item.name}</p>\n                        <p\n                          style={{ color: \"blue\", cursor: \"pointer\" }}\n                          onClick={() => handleShow(item)}\n                        >\n                          More Info\n                        </p>\n                      </div>\n                    ))\n                  ) : (\n                    <option key={\"loading\"}>Loading...</option>\n                  )}\n                </Form.Control>\n              </Form.Group>\n              {item.status === \"APPROVED\" && (\n                <Alert key=\"1\" variant=\"success\">\n                  The transaction has been approved by all the authorities\n                </Alert>\n              )}\n              {item.status === \"DECLINED\" && (\n                <Alert key=\"5\" variant=\"danger\">\n                  The transaction has been declined by{\" \"}\n                  {item.currentApprovalRole}.\n                </Alert>\n              )}\n              {item.status === \"EXPIRED\" && (\n                <Alert key=\"7\" variant=\"danger\">\n                  The transaction is expired and the approval window is closed.{\" \"}\n                  {item.currentApprovalRole}.\n                </Alert>\n              )}\n              {isWaiting && (\n                <Alert key=\"6\" variant=\"warning\">\n                  Wait for {item.currentApprovalRole} to approve the transaction\n                </Alert>\n              )}\n              {isApproved && (\n                <Button disabled variant=\"success\">\n                  Approved\n                </Button>\n              )}\n              {isDeclined && (\n                <Button disabled variant=\"danger\">\n                  Declined\n                </Button>\n              )}\n              {item.status === \"PENDING\" && !isWaiting && (\n                <div>\n                  {!isApproved && !isDeclined && (\n                    <>\n                      {auth &&\n                        userInfo &&\n                        userInfo.role !== \"LA\" &&\n                        userInfo.role !== \"Owner\" && (\n                          <div>\n                            <Button\n                              disabled={approving}\n                              onClick={!approving ? approveTransaction : null}\n                              variant=\"primary\"\n                              type=\"submit\"\n                            >\n                              {!approving\n                                ? \"Approve Transaction\"\n                                : \"Loading...\"}\n                            </Button>\n                            <Button\n                              style={{ marginLeft: \"1rem\" }}\n                              disabled={approving}\n                              onClick={!approving ? declineTransaction : null}\n                              variant=\"danger\"\n                              type=\"submit\"\n                            >\n                              {!approving ? \"Decline\" : \"Loading...\"}\n                            </Button>\n                          </div>\n                        )}\n                    </>\n                  )}\n                </div>\n              )}\n            </Form>\n          )}\n        </div>\n      )}\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Approval Info</Modal.Title>\n        </Modal.Header>\n        {info ? (\n          <Modal.Body>\n            <p className=\"modal-para\">\n              <span>Address:</span> {info.id}\n            </p>\n            <p className=\"modal-para\">\n              <span>Name:</span> {info.name}\n            </p>\n            <p className=\"modal-para\">\n              <span>Role:</span> {info.role}\n            </p>\n            <p className=\"modal-para\">\n              <span>Approved Txs:</span> {info.approveCount}\n            </p>\n            <p className=\"modal-para\">\n              <span>Declined Txs:</span> Rs {info.declineCount}\n            </p>\n            <p className=\"modal-para\">\n              <span>Slipped Txs:</span> Rs {info.slipCount}\n            </p>\n          </Modal.Body>\n        ) : (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              minHeight: \"100px\",\n              alignItems: \"center\",\n            }}\n          >\n            <Spinner animation=\"border\" variant=\"primary\" />\n          </div>\n        )}\n      </Modal>\n    </Container>\n  );\n};\n\nexport default RightInfo;\n","import React, {useEffect, useState} from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport LeftList from \"../../components/Home/LeftList\";\nimport RightInfo from \"../../components/Home/RightInfo\";\nimport { Route } from \"react-router-dom\";\nimport factory from \"../../ethereum/factory\";\n\nconst Home = ({auth}) => {\n\n  const [transactions, setTransactions] = useState([]);\n  //new\n  useEffect(async () => {\n    const transactionList = await factory.methods\n    .listTransaction().call();\n    setTransactions(transactionList)\n  }, [])\n\n  return (\n    <div style={{ padding: \"0 1rem\" }}>\n      <Row>\n        <Col md={4}>\n          <LeftList items={transactions} />\n        </Col>\n        <Col md={8}>\n          <Route path={process.env.PUBLIC_URL + \"/BAPS/home/:hash\"}>\n            <RightInfo isEmpty={false} auth={auth} />\n          </Route>\n          <Route path={process.env.PUBLIC_URL + \"/BAPS/home/:\"} exact>\n            <RightInfo isEmpty={true} auth={auth} />\n          </Route>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport factory from \"../../ethereum/factory\";\n\nconst MemberItem = ({ item, handleShowDelete }) => {\n  const [data, setData] = useState(null);\n\n  useEffect(async () => {\n    const userInfo = await factory.methods.userMap(item).call();\n    setData(userInfo);\n  }, [item]);\n\n  return (\n    <tr>\n      <td>{data && data.number}</td>\n      <td>{data && data.name}</td>\n      <td>{data && data.role}</td>\n      <td>\n        {data && data.approveCount} / {data && data.declineCount} /{\" \"}\n        {data && data.slipCount}\n      </td>\n      <td>{data && data.id}</td>\n      <td>\n        {data && data.id !== \"0x0000000000000000000000000000000000000000\" && (\n          <Button\n            onClick={() => handleShowDelete(data && data.number)}\n            variant=\"outline-danger\"\n          >\n            Delete\n          </Button>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default MemberItem;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Button,\n  Modal,\n  Form,\n  Alert,\n} from \"react-bootstrap\";\nimport web3 from \"../../ethereum/web3\";\nimport factory from \"../../ethereum/factory\";\nimport MemberItem from \"./MemberItem\";\nimport \"./Member.css\";\n\nconst Member = ({ auth }) => {\n  const [show, setShow] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"Owner\");\n  const [maxAmount, setMaxAmount] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [createAlert, setCreateAlert] = useState(false);\n  const [creating, setCreating] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [index, setIndex] = useState(null);\n  const [roleList, setRoleList] = useState([]);\n\n  const handleClose = () => {\n    setShow(false);\n    setShowDelete(false);\n    setCreateAlert(false);\n  };\n  const handleShow = () => setShow(true);\n\n  const handleShowDelete = (number) => {\n    setShowDelete(true);\n    setIndex(number);\n  };\n\n  useEffect(async () => {\n    fetchUserList();\n    fetchRoleList();\n  }, []);\n\n  useEffect(() => {\n    if (auth == false) {\n      window.location.replace(\"/home\");\n    }\n  }, [auth]);\n\n  const fetchRoleList = async () => {\n    try {\n      const _roleList = await factory.methods.listRoles().call();\n      //   const filteredList = userList.filter(item => item.id !== \"0x0000000000000000000000000000000000000000\");\n      setRoleList(_roleList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const fetchUserList = async () => {\n    try {\n      const accounts = await web3.eth.getAccounts();\n      console.log(accounts[0]);\n      const userList = await factory.methods.listUsers().call();\n      const filteredList = userList.filter(\n        (item) => item !== \"0x0000000000000000000000000000000000000000\"\n      );\n      setUsers(filteredList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createUser = async () => {\n    if (name === \"\" || role === \"\" || id === \"\") {\n      return setCreateAlert(true);\n    }\n    try {\n      setCreateAlert(false);\n      setCreating(true);\n      const accounts = await web3.eth.getAccounts();\n      const user = await factory.methods\n        .createUser(role, id, name)\n        .send({ from: accounts[0] });\n      setCreating(false);\n      setShow(false);\n      fetchUserList();\n    } catch (err) {\n      console.log(err);\n      setCreating(false);\n    }\n  };\n\n  const deleteUser = async () => {\n    try {\n      if (!index) {\n        return console.log(\"index cannot be null\");\n      }\n      setDeleting(true);\n      const accounts = await web3.eth.getAccounts();\n      const deletedUser = await factory.methods.deleteUser(index).send({\n        from: accounts[0],\n      });\n      setDeleting(false);\n      setShowDelete(false);\n      fetchUserList();\n    } catch (err) {\n      setDeleting(false);\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\n        <Row>\n          <Col>\n            <h2>All Members</h2>\n          </Col>\n          <Col style={{ textAlign: \"right\" }}>\n            <Button onClick={handleShow}>Add Member</Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>#</th>\n                  <th>Name</th>\n                  <th>Role</th>\n                  <th>Approved/Declined/Slipped</th>\n                  <th>Address</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users.length !== 0 &&\n                  users.map((item, index) => (\n                    <MemberItem\n                      key={item.id + index}\n                      item={item}\n                      handleShowDelete={handleShowDelete}\n                    />\n                  ))}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </Container>\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>Add Member</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {createAlert && (\n            <Alert key=\"1\" variant=\"danger\">\n              No input should be empty!\n            </Alert>\n          )}\n          <Form className=\"text-left\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Member Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. Sanil Gandhi\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Member roles</Form.Label>\n              <div>\n                <select\n                  className=\"member-create-select\"\n                  onChange={(e) => setRole(e.target.value)}\n                >\n                  <option value=\"Owner\">\n                    Admin (Owner)\n                  </option>\n                  {roleList.map((role) => (\n                    <option value={role.role}>\n                      {role.name} ({role.role})\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Public Key</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"e.g. 0x3Ec8719804c7D39B71446E0edFe88893b128b24E\"\n                value={id}\n                onChange={(e) => setId(e.target.value)}\n              />\n            </Form.Group>\n          </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            disabled={creating || name === \"\" || id === \"\"}\n            onClick={!creating ? createUser : null}\n            variant=\"primary\"\n          >\n            {creating ? \"Loading...\" : \"Create\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showDelete} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Member</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure, You want to delete this member?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"outline-secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button\n            disabled={deleting}\n            variant=\"danger\"\n            onClick={!deleting ? deleteUser : null}\n          >\n            {!deleting ? \"Delete\" : \"Loading...\"}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Member;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Nots.css\";\nimport { ListGroup, Badge } from \"react-bootstrap\";\nimport factory from \"../../ethereum/factory\";\n\nconst Notification = () => {\n  const [nots, setNots] = useState([]);\n  //new\n  useEffect(async () => {\n    let list = await factory.methods.listNotification().call();\n    let arr = [...list];\n    let ns = arr.reverse();\n    setNots(ns);\n  }, []);\n\n  return (\n    <div className=\"nots\">\n      {nots.length > 0 &&\n        nots.map((item, index) => {\n          let variant;\n          if (item.status === \"create\") {\n            variant = \"warning\";\n          } else if (item.status === \"pending\") {\n            variant = \"success\";\n          } else {\n            variant = \"primary\";\n          }\n\n          return (\n            <ListGroup as=\"ol\" numbered>\n              <ListGroup.Item\n                as=\"li\"\n                variant={variant}\n                className=\"d-flex mb-2 justify-content-between align-items-start\"\n              >\n                <div className=\"ms-2 me-auto d-flex flex-column align-items-start\">\n                  <h5 className=\"fw-bold\">{item.title}</h5>\n                  <p>{item.message}</p>\n                </div>\n                <Badge variant=\"primary\" pill>\n                  {index + 1}\n                </Badge>\n              </ListGroup.Item>\n            </ListGroup>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useEffect } from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  Button,\n  Alert,\n  Table,\n} from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\n\nconst CreateRole = ({auth}) => {\n  const [id, setId] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [minAmount, setMinAmount] = useState(\"\");\n  const [maxAmount, setMaxAmount] = useState(\"\");\n  const [creating, setCreating] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [roles, setRoles] = useState([]);\n\n  useEffect(() => {\n    fetchRoleList()\n    if(auth == false) {\n        window.location.replace(\"/home\")\n    }\n  }, [auth])\n\n  \n  const fetchRoleList = async () => {\n    try {\n      const roleList = await factory.methods.listRoles().call();\n    //   const filteredList = userList.filter(item => item.id !== \"0x0000000000000000000000000000000000000000\");\n      setRoles(roleList);\n      console.log(roleList);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const createRole = async (e) => {\n    e.preventDefault();\n    try {\n      setCreating(true);\n      const accounts = await web3.eth.getAccounts();\n      const myAccount = accounts[0];\n\n      const createdRole = await factory.methods\n        .createRole(id, name, maxAmount, minAmount)\n        .send({\n          from: myAccount,\n        });\n      const tx = createdRole.transactionHash;\n      setCreating(false);\n      setSuccess(\"Successfully created Role \" + id + \" with tx hash  \" + tx);\n      fetchRoleList()\n    } catch (err) {\n      setError(\"Error in creating role!\");\n      setSuccess(\"\");\n      setCreating(false);\n      console.log(err);\n    }\n  };\n\n  const handleDeleteRole = () => {\n\n  }\n\n  return (\n    <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\n      <h2>Create Role</h2>\n      <Row>\n        <Col>\n          {(success !== \"\" || error !== \"\") && (\n            <Alert key=\"1\" variant={success !== \"\" ? \"success\" : \"danger\"}>\n              {success !== \"\" ? success : error}\n            </Alert>\n          )}\n          <Form className=\"text-left\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Role Id</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Role Id\"\n                value={id}\n                onChange={(e) => setId(e.target.value)}\n              />\n              <Form.Text className=\"text-muted\">\n                Unique id for the role LA, HOD, FO, REG, VC, CC\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Role Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Role Name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Maximum Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Maximum Amount\"\n                value={maxAmount}\n                onChange={(e) => setMaxAmount(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Minimum Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"Minimum Amount\"\n                value={minAmount}\n                onChange={(e) => setMinAmount(e.target.value)}\n              />\n            </Form.Group>\n\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={\n                creating ||\n                id === \"\" ||\n                name === \"\" ||\n                maxAmount === \"\" ||\n                minAmount === \"\"\n              }\n              onClick={!creating ? createRole : null}\n            >\n              {!creating ? \"Create\" : \"Loading...\"}\n            </Button>\n            <Button\n              style={{ marginLeft: \"1rem\" }}\n              variant=\"outline-danger\"\n              type=\"submit\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        </Col>\n        <Col>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Role Id</th>\n                <th>Role Name</th>\n                <th>Max Amount</th>\n                <th>Min Amount</th>\n                {/* <th>Action</th> */}\n              </tr>\n            </thead>\n            <tbody>\n              {roles.length !== 0 &&\n                roles.map((item, index) => (\n                  <tr key={item.role + index}>\n                    <td>{item.number}</td>\n                    <td>{item.role}</td>\n                    <td>{item.name}</td>\n                    <td>{item.maxAmount}</td>\n                    <td>Rs {item.minAmount}</td>\n                    {/* <td>\n                      <Button\n                        onClick={() => handleDeleteRole(item.role)}\n                        variant=\"outline-danger\"\n                      >\n                        Delete\n                      </Button>\n                    </td> */}\n                  </tr>\n                ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CreateRole;\n","import React from \"react\";\nimport Home from \"./Home/Home\";\nimport { Route } from \"react-router-dom\";\nimport Create from \"./Create/Create\";\nimport Member from './Member/Member'\nimport Notification from \"./Notification/Notification\";\nimport CreateRole from \"./Create/CreateRole\";\n\nconst Layout = ({auth}) => {\n  return (\n    <div style={{ paddingTop: \"4.5rem\" }}>\n      <Route path=\"/BAPS/home\" >\n        <Home auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/create\">\n        <Create auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/create-role\">\n        <CreateRole auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/members\">\n        <Member auth={auth} />\n      </Route>\n      <Route path=\"/BAPS/notification\">\n        <Notification auth={auth} />\n      </Route>\n    </div>\n  );\n};\n\nexport default Layout;\n","import \"./App.css\";\nimport Header from \"./components/Navbar/Header\";\nimport Layout from \"./containers/Layout\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport web3 from \"./ethereum/web3\";\nimport factory from \"./ethereum/factory\";\nimport { useState } from \"react\";\nimport UnAuth from \"./containers/UnAuth/UnAuth\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n  const [auth, setAuth] = useState(null);\n\n  useEffect(() => {\n    let accounts;\n\n    async function loadData() {\n      try {\n        accounts = await web3.eth.getAccounts();\n        const isMember = await factory.methods\n          .authMember()\n          .call({ from: accounts[0] });\n        setAuth(true);\n      } catch (err) {\n        setAuth(false);\n        console.log(err);\n      }\n    }\n\n    async function updateMetamaskAcc() {\n      loadData();\n      window.ethereum.on(\"accountsChanged\", async function () {\n        // Time to reload your interface with accounts[0]!\n        loadData();\n        // accounts = await web3.eth.getAccounts();\n      });\n    }\n    updateMetamaskAcc();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Header auth={auth} />\n        <Router>\n          <Route path=\"/BAPS\">\n            <Layout auth={auth} />\n          </Route>\n        </Router>\n      </div>\n      {/* {auth ? (\n        <div>\n          <Header />\n          <Router>\n            <Route path=\"/\">\n              <Layout />\n            </Route>\n          </Router>\n        </div>\n      ) : (\n        <div\n          style={{\n            height: \"100vh\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          {auth == null ? (\n            <Spinner animation=\"border\" variant=\"primary\" />\n          ) : (\n            <UnAuth />\n          )}\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import web3 from './web3';\nimport BatuFi from './build/BatuFi.json';\n\nconst instance = new web3.eth.Contract(\n    BatuFi.abi,\n    '0x714211C198B494260164F28b0b56cc50e46F8949'\n);\n\nexport default instance;","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport sha256 from \"sha256\";\nimport factory from \"../../ethereum/factory\";\nimport web3 from \"../../ethereum/web3\";\nimport { uid } from \"uid\";\nimport ipfs from \"../../ethereum/ipfs\";\nconst LogisticRegression = require(\"ml-logistic-regression\");\nconst { Matrix } = require(\"ml-matrix\");\n\nconst Create = ({ auth }) => {\n  const [file, setFile] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const [hash, setHash] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [creating, setCreating] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const [estimate, setEstimate] = useState();\n\n  useEffect(() => {\n    if (auth == false) {\n      window.location.replace(\"/home\");\n    }\n  }, [auth]);\n\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n  }\n  function getImageBuffer(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => resolve({ buffer: Buffer(reader.result) });\n      reader.onerror = (error) => reject(error);\n    });\n  }\n\n  const createTransaction = async (e) => {\n    e.preventDefault();\n    try {\n      setCreating(true);\n      let salt = \"\";\n      let id = \"\";\n      const accounts = await web3.eth.getAccounts();\n      const imageBuffer = await getImageBuffer(file);\n      const data = await getBase64(file);\n      salt = sha256(data);\n      setHash(salt);\n      id = uid(24);\n      setId(id);\n\n      ipfs.add(imageBuffer.buffer, async (err, result) => {\n        if (err) {\n          console.log(err);\n          setError(\"Error, \", err.message);\n          return;\n        }\n        const docHash = result[0].hash;\n        const transaction = await factory.methods\n          .createTransaction(id, docHash, \"default\", comment, amount)\n          .send({\n            from: accounts[0],\n          });\n        const tx = transaction.transactionHash;\n\n        //* calculate the estimate duration for the procurrement to be approved by all the authority\n        calculateEstimate(amount, transaction);\n\n        setCreating(false);\n        setFile(\"\");\n        setAmount(\"\");\n        setComment(\"\");\n        setSuccess(\n          \"Successfully created transaction by \" +\n            accounts[0] +\n            \" with transaction hash \" +\n            tx\n        );\n        setError(\"\");\n      });\n    } catch (err) {\n      setError(\"Error in creating transaction!\");\n      setSuccess(\"\");\n      setCreating(false);\n      console.log(err);\n    }\n  };\n\n  // function that calculates the estimate duration\n  const calculateEstimate = async (amount, tx) => {\n    // get all the previous transaction amount and add the latest tx amount\n    const transactionList = await factory.methods.listTransaction().call();\n    let list = [];\n    let dateList = [];\n    let lastIndex = 0;\n    transactionList.map((item, index) => {\n      list.push([index, item.amount]);\n      dateList.push(item.timestamp);\n      lastIndex = index;\n    });\n    const matrixAmount = [...list, [lastIndex + 1, amount]];\n    const matrixDates = dateList;\n\n    // Our training set (X,Y).\n    const X = new Matrix(matrixAmount);\n\n    // get all the\n    const Y = Matrix.columnVector(matrixDates);\n\n    // We will train our model.\n    const logreg = new LogisticRegression({\n      numSteps: 1000,\n      learningRate: 5e-3,\n    });\n    logreg.train(X, Y);\n\n    const finalResults = logreg.predict(X);\n    setEstimate(finalResults)\n  };\n\n  return (\n    <Container style={{ paddingTop: \"2rem\" }} className=\"text-left\">\n      <h2>Create Transaction</h2>\n      <Row>\n        <Col>\n          {(success !== \"\" || error !== \"\") && (\n            <Alert key=\"1\" variant={success !== \"\" ? \"success\" : \"danger\"}>\n              {success !== \"\" ? success : error}\n            </Alert>\n          )}\n          <Form className=\"text-left\">\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Transaction Id</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Transaction Id\"\n                value={id}\n                readOnly\n              />\n              <Form.Text className=\"text-muted\">\n                Uniquely generated transaction id at the time when transaction\n                has been created, This id will never change\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Document Hash</Form.Label>\n              <Form.Control\n                readOnly\n                type=\"text\"\n                placeholder=\"Transaction Hash\"\n                value={hash}\n              />\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Amount</Form.Label>\n              <Form.Control\n                type=\"number\"\n                placeholder=\"e.g 15000\"\n                value={amount}\n                onChange={(e) => setAmount(e.target.value)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formFile\" className=\"mb-3\">\n              <Form.Label>Uploaded Document</Form.Label>\n              <Row>\n                <Col>\n                  <Form.Control\n                    onChange={(e) => setFile(e.target.files[0])}\n                    type=\"file\"\n                  />\n                </Col>\n                <Col>\n                  <Button size=\"sm\" variant=\"secondary\">\n                    View File\n                  </Button>\n                </Col>\n              </Row>\n            </Form.Group>\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Add Comment</Form.Label>\n              <Form.Control\n                placeholder=\"Add any comment...\"\n                as=\"textarea\"\n                rows={3}\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n              />\n            </Form.Group>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              disabled={creating || amount === \"\" || file === \"\"}\n              onClick={!creating ? createTransaction : null}\n            >\n              {!creating ? \"Create\" : \"Loading...\"}\n            </Button>\n            <Button\n              style={{ marginLeft: \"1rem\" }}\n              variant=\"outline-danger\"\n              type=\"submit\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Create;\n","// import ipfsClient from \"ipfs-http-client\";\nimport IPFS from \"ipfs-api\";\n\nconst projectId = \"2UIZMWmPzQ6AiKfmzePxDfGM0U8\";\nconst projectSecret = \"78f5e328c7bb8aed7ab4ffface404949\";\nconst auth =\n  \"Basic \" + Buffer.from(projectId + \":\" + projectSecret).toString(\"base64\");\n\n// const ipfs = ipfsClient.create({\n//     host: 'ipfs.infura.io',\n//     port: 5001,\n//     protocol: 'https',\n//     headers: {\n//         authorization: auth\n//     }\n// })\n\nconst ipfs = new IPFS({\n  host: \"ipfs.infura.io\",\n  port: 5001,\n  protocol: \"https\",\n  headers: {\n    authorization: auth,\n  },\n});\n\nexport default ipfs;\n\n// export default ipfs;\n","import Web3 from 'web3';\n\nlet web3;\n\nif(typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\n    // In the browser and metamask is running\n    web3 = new Web3(window.web3.currentProvider);\n}else {\n    // In the server or user is not running metamask\n    const provider = new Web3.providers.HttpProvider(\n        'https://sepolia.infura.io/v3/f47f46b099464563b22b179b0567ac33'\n    )\n    web3 = new Web3(provider)\n}\n\nexport default web3;"],"sourceRoot":""}